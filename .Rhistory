write.table(elsevier,"elsevier")
e = read.table("elsevier")
head(e)
str(e)
str(elsevier)
e = read.table("elsevier",stringsAsFactors = F)
str(e)
file.exist(elsevier)
file.exists(elsevier)
file.exists("elsevier")
if(file.exists("elsevier") == F) {
out <- extract_tables("https://www.elsevier.com/__data/promis_misc/j.custom97.pdf")
temp_else <- do.call(rbind, out[-length(out)])
elsevier = as.data.frame(temp_else[-1,c(2,5)],stringsAsFactors = F)
write.table(elsevier,"elsevier")}
if(file.exists("elsevier") == T) {elsevier = read.table("elsevier",stringsAsFactors = F)}
head(elsevier)
p1 + facet_grid(rows= vars(Publisher),scales="free")
cor.test(results_data[,2],as.numeric(results_data[,3]),na.rm = T)
#plot(results_data[,1]*1000,log(as.numeric(results_data[,2])),ylab = "Impact Factor",xlab = "Publication cost in USD")
p1=ggplot() + labs(title = "Cost of Impact Factor") +
theme_bw() +
theme(plot.title = element_text(hjust = 0.5, size=14, face="bold")) +
geom_point(aes(y = IF, x = Cost,size = Citations,colour = Publisher),
data = results_data,stat="identity") + xlab("Cost in USD")  +  ylab("Impact Factor")
#PDF (dimensions in inches)
#dev.new(width=10, height=5,noRStudioGD = TRUE)
p1 + facet_grid(rows= vars(Publisher),scales="free")
library(ggplot2)
knitr::opts_chunk$set(echo = TRUE)
# Required packages
library(tabulizer)
library(ggplot2)
setwd("~/Desktop/IF")
# Impact Factor downloaded from webofscience
impact_factor = read.table("JournalHomeGrid.csv",stringsAsFactors = F,sep = ",",header = T)
impact_factor[,3] = gsub(",","",impact_factor[,3])
impact_factor[,2] = toupper(impact_factor[,2])
# Cost from wiley (downloaded here)
#(https://authorservices.wiley.com/author-resources/Journal-Authors/open-access/article-publication-charges.html)
temp_wiley = read.table("Wiley-Journal-APCs-OnlineOpen.txt",stringsAsFactors = F, dec = ",",sep = "\t",header = T)
wiley = temp_wiley[,3:4]
wiley[,2] = wiley[,2] * 1000
# Cost from elsevier (downlaoded as pdf)
if(file.exists("~/Desktop/IF/elsevier") == F) {
out <- extract_tables("https://www.elsevier.com/__data/promis_misc/j.custom97.pdf")
temp_else <- do.call(rbind, out[-length(out)])
elsevier = as.data.frame(temp_else[-1,c(2,5)],stringsAsFactors = F)
write.table(elsevier,"elsevier")}
if(file.exists("~/Desktop/IF/elsevier") == T) {elsevier = read.table("~/Desktop/IF/elsevier",stringsAsFactors = F)}
# From NPG
temp = read.table("npg.txt",stringsAsFactors = F, dec = ",",sep = "\t",header = F)
npg = data.frame(title = rep(0,nrow(temp)),rate =  rep(0,nrow(temp)))
for(i in 1:nrow(temp))
{
temp_vector = strsplit(temp[i,]," ")[[1]]
npg[i,1] = paste(temp_vector[-length(temp_vector)],collapse = " ") #name
npg[i,2] = temp_vector[length(temp_vector)] #cost
npg[i,2] = gsub("^....","",strsplit(npg[i,2],split = "GBP")[[1]][1])
}
npg[,2] = as.numeric(npg[,2])
# Cost from Tyalor and Francis
tf = read.table("2019_Agent_Price_List.txt",stringsAsFactors = F,sep = "\t",header = T)
tf_price = tf[tf[,8]=='USD',c(1,9)] #keep only name + cost in USD
#combine wiley, elsevier, taylorFrancis, NPG.
w = cbind(wiley,0,0,"Wiley")
t = cbind(tf_price,0,0,"Taylor&Francis")
e = cbind(elsevier,0,0,"Elsevier")
n =  cbind(npg,0,0,"NPG")
colnames(e) = c("Journal","Cost","IF","Citations","Publisher")
colnames(t) = c("Journal","Cost","IF","Citations","Publisher")
colnames(w) = c("Journal","Cost","IF","Citations","Publisher")
colnames(n) = c("Journal","Cost","IF","Citations","Publisher")
t$Cost = as.numeric(t$Cost)
e$Cost = as.numeric(e$Cost)
results = rbind(w,t,e,n)
results[,1] = toupper(results[,1])
#add IF to all publications
for(i in 1:nrow(results))
{
temp = impact_factor[,2] %in% results[i,1]
if(length(temp[temp==T])==1) results[i,3:4] = impact_factor[temp==T,c(4,3)]
}
results_data = results[results[,3]!=0,]
#remove Taylor and Francis?
#results_data = results_data[results_data$Publisher != "Taylor&Francis", ]
# Remove NAs and zeros
results_data = results_data[!is.na(results_data[,2]),]
results_data = results_data[!is.na(results_data[,3]),]
results_data = results_data[!is.na(results_data[,4]),]
results_data = results_data[results_data[,2] != 0,]
results_data = results_data[results_data[,3] != 0,]
results_data = results_data[results_data[,4] != 0,]
results_data$Publisher = as.character(results_data$Publisher )
results_data$Cost = log(as.numeric(results_data$Cost),10)
results_data$IF = log(as.numeric(results_data$IF),10)
results_data$Citations = as.numeric(results_data$Citations)
###
cor.test(results_data[,2],as.numeric(results_data[,3]),na.rm = T)
#plot(results_data[,1]*1000,log(as.numeric(results_data[,2])),ylab = "Impact Factor",xlab = "Publication cost in USD")
p1=ggplot() + labs(title = "Cost of Impact Factor") +
theme_bw() +
theme(plot.title = element_text(hjust = 0.5, size=14, face="bold")) +
geom_point(aes(y = IF, x = Cost,size = Citations,colour = Publisher),
data = results_data,stat="identity") + xlab("Cost in USD")  +  ylab("Impact Factor")
#PDF (dimensions in inches)
#dev.new(width=10, height=5,noRStudioGD = TRUE)
p1 + facet_grid(rows= vars(Publisher),scales="free")
###
cor.test(results_data[,2],as.numeric(results_data[,3]),na.rm = T)
#plot(results_data[,1]*1000,log(as.numeric(results_data[,2])),ylab = "Impact Factor",xlab = "Publication cost in USD")
p1=ggplot() + labs(title = "Cost of Impact Factor") +
theme_bw() +
theme(plot.title = element_text(hjust = 0.5, size=14, face="bold")) +
geom_point(aes(y = IF, x = Cost,size = Citations,colour = Publisher),
data = results_data,stat="identity") + xlab("Cost in USD")  +  ylab("Impact Factor")
#PDF (dimensions in inches)
dev.new(width=10, height=5,noRStudioGD = TRUE)
p1 + facet_grid(rows= vars(Publisher),scales="free")
?facet_grid
#PDF (dimensions in inches)
dev.new(width=10, height=5,noRStudioGD = TRUE)
p1 + facet_grid(rows= vars(Publisher),scales="free_x")
#PDF (dimensions in inches)
dev.new(width=10, height=5,noRStudioGD = TRUE)
p1 + facet_grid(rows= vars(Publisher),scales="free_y")
# Margins can be specified logically (all yes or all no) or for specific
# variables as (character) variable names
mg <- ggplot(mtcars, aes(x = mpg, y = wt)) + geom_point()
mg + facet_grid(vs + am ~ gear, margins = TRUE)
mg + facet_grid(vs + am ~ gear, margins = "am")
mg <- ggplot(mtcars, aes(x = mpg, y = wt)) + geom_point()
mg + facet_grid(vs + am ~ gear, margins = TRUE)
mg + facet_grid(vs + am ~ gear, margins = "vs")
ggplot(mpg, aes(drv, model)) +
geom_point() +
facet_grid(manufacturer ~ ., scales = "free", space = "free") +
theme(strip.text.y = element_text(angle = 0))
# across all panels (the default), or whether they should be allowed
# to vary
mt <- ggplot(mtcars, aes(mpg, wt, colour = factor(cyl))) +
geom_point()
mt + facet_grid(. ~ cyl, scales = "free")
dim(results_data)
dim(results_data)
headmt <- ggplot(mtcars, aes(mpg, wt, colour = factor(cyl))) +
geom_point()
mt + facet_grid(. ~ cyl, scales = "free")(results_data)
mt <- ggplot(mtcars, aes(mpg, wt, colour = factor(cyl))) +
geom_point()
mt + facet_grid(. ~ cyl, scales = "free")
head(mtcars)
head(results_data)
dev.new(width=10, height=5,noRStudioGD = TRUE)
p1 + facet_grid(col= vars(Publisher),scales="free_x")
head(impact_factor)
28839/244
str(impact_factor)
impact_factor = read.table("JournalHomeGrid.csv",stringsAsFactors = F,sep = ",",header = T)
impact_factor[,3] = gsub(",","",impact_factor[,3])
impact_factor[,2] = toupper(impact_factor[,2])
impact_factor[,6]  = impact_factor[,3]/impact_factor[,4]
colnames(impact_factor)[6] = "Papers"
impact_factor = read.table("~/Desktop/IF/JournalHomeGrid.csv",stringsAsFactors = F,sep = ",",header = T)
impact_factor[,3] = gsub(",","",impact_factor[,3])
impact_factor[,2] = toupper(impact_factor[,2])
impact_factor[,6]  = impact_factor[,3]/impact_factor[,4]
colnames(impact_factor)[6] = "Papers"
str(impact_factor)
impact_factor = read.table("~/Desktop/IF/JournalHomeGrid.csv",stringsAsFactors = F,sep = ",",header = T)
impact_factor[,3] = gsub(",","",impact_factor[,3])
impact_factor[,2] = toupper(impact_factor[,2])
impact_factor[,6]  = as.numeric(impact_factor[,3])/as.numeric(impact_factor[,4])
colnames(impact_factor)[6] = "Papers"
head(impact_factor)
dev.new(width=10, height=5,noRStudioGD = TRUE)
p1 + facet_grid(col= vars(Publisher),scales="free_x")
head(results_data)
results_data = results[results[,3]!=0,]
head(results_data)
head(results)
impact_factor[temp==T,c(4,6)]
impact_factor[1:5,c(4,6)]
knitr::opts_chunk$set(echo = TRUE)
# Required packages
library(tabulizer)
library(ggplot2)
setwd("~/Desktop/IF")
# Impact Factor downloaded from webofscience
impact_factor = read.table("~/Desktop/IF/JournalHomeGrid.csv",stringsAsFactors = F,sep = ",",header = T)
impact_factor[,3] = gsub(",","",impact_factor[,3])
impact_factor[,2] = toupper(impact_factor[,2])
impact_factor[,6]  = as.numeric(impact_factor[,3])/as.numeric(impact_factor[,4])
colnames(impact_factor)[6] = "Papers"
# Cost from wiley (downloaded here)
#(https://authorservices.wiley.com/author-resources/Journal-Authors/open-access/article-publication-charges.html)
temp_wiley = read.table("Wiley-Journal-APCs-OnlineOpen.txt",stringsAsFactors = F, dec = ",",sep = "\t",header = T)
wiley = temp_wiley[,3:4]
wiley[,2] = wiley[,2] * 1000
# Cost from elsevier (downlaoded as pdf)
if(file.exists("~/Desktop/IF/elsevier") == F) {
out <- extract_tables("https://www.elsevier.com/__data/promis_misc/j.custom97.pdf")
temp_else <- do.call(rbind, out[-length(out)])
elsevier = as.data.frame(temp_else[-1,c(2,5)],stringsAsFactors = F)
write.table(elsevier,"elsevier")}
if(file.exists("~/Desktop/IF/elsevier") == T) {elsevier = read.table("~/Desktop/IF/elsevier",stringsAsFactors = F)}
# From NPG
temp = read.table("npg.txt",stringsAsFactors = F, dec = ",",sep = "\t",header = F)
npg = data.frame(title = rep(0,nrow(temp)),rate =  rep(0,nrow(temp)))
for(i in 1:nrow(temp))
{
temp_vector = strsplit(temp[i,]," ")[[1]]
npg[i,1] = paste(temp_vector[-length(temp_vector)],collapse = " ") #name
npg[i,2] = temp_vector[length(temp_vector)] #cost
npg[i,2] = gsub("^....","",strsplit(npg[i,2],split = "GBP")[[1]][1])
}
npg[,2] = as.numeric(npg[,2])
# Cost from Tyalor and Francis
tf = read.table("2019_Agent_Price_List.txt",stringsAsFactors = F,sep = "\t",header = T)
tf_price = tf[tf[,8]=='USD',c(1,9)] #keep only name + cost in USD
#combine wiley, elsevier, taylorFrancis, NPG.
w = cbind(wiley,0,0,"Wiley")
t = cbind(tf_price,0,0,"Taylor&Francis")
e = cbind(elsevier,0,0,"Elsevier")
n =  cbind(npg,0,0,"NPG")
colnames(e) = c("Journal","Cost","IF","Citations","Publisher")
colnames(t) = c("Journal","Cost","IF","Citations","Publisher")
colnames(w) = c("Journal","Cost","IF","Citations","Publisher")
colnames(n) = c("Journal","Cost","IF","Citations","Publisher")
t$Cost = as.numeric(t$Cost)
e$Cost = as.numeric(e$Cost)
results = rbind(w,t,e,n)
results[,1] = toupper(results[,1])
#combine wiley, elsevier, taylorFrancis, NPG.
w = cbind(wiley,0,0,"Wiley")
t = cbind(tf_price,0,0,"Taylor&Francis")
e = cbind(elsevier,0,0,"Elsevier")
n =  cbind(npg,0,0,"NPG")
colnames(e) = c("Journal","Cost","IF","Papers","Publisher")
colnames(t) = c("Journal","Cost","IF","Papers","Publisher")
colnames(w) = c("Journal","Cost","IF","Papers","Publisher")
colnames(n) = c("Journal","Cost","IF","Papers","Publisher")
t$Cost = as.numeric(t$Cost)
e$Cost = as.numeric(e$Cost)
results = rbind(w,t,e,n)
results[,1] = toupper(results[,1])
#add IF to all publications
for(i in 1:nrow(results))
{
temp = impact_factor[,2] %in% results[i,1]
if(length(temp[temp==T])==1) results[i,3:4] = impact_factor[temp==T,c(4,6)]
}
results_data = results[results[,3]!=0,]
#remove Taylor and Francis?
#results_data = results_data[results_data$Publisher != "Taylor&Francis", ]
head(results)
# Remove NAs and zeros
results_data = results_data[!is.na(results_data[,2]),]
results_data = results_data[!is.na(results_data[,3]),]
results_data = results_data[!is.na(results_data[,4]),]
results_data = results_data[results_data[,2] != 0,]
results_data = results_data[results_data[,3] != 0,]
results_data = results_data[results_data[,4] != 0,]
results_data$Publisher = as.character(results_data$Publisher )
results_data$Cost = log(as.numeric(results_data$Cost),10)
results_data$IF = log(as.numeric(results_data$IF),10)
results_data$Citations = as.numeric(results_data$Citations)
# Remove NAs and zeros
results_data = results_data[!is.na(results_data[,2]),]
results_data = results_data[!is.na(results_data[,3]),]
results_data = results_data[!is.na(results_data[,4]),]
results_data = results_data[results_data[,2] != 0,]
results_data = results_data[results_data[,3] != 0,]
results_data = results_data[results_data[,4] != 0,]
results_data$Publisher = as.character(results_data$Publisher )
results_data$Cost = log(as.numeric(results_data$Cost),10)
results_data$IF = log(as.numeric(results_data$IF),10)
results_data$Papers = as.numeric(results_data$Papers)
###
cor.test(results_data[,2],as.numeric(results_data[,3]),na.rm = T)
#plot(results_data[,1]*1000,log(as.numeric(results_data[,2])),ylab = "Impact Factor",xlab = "Publication cost in USD")
p1=ggplot() + labs(title = "Cost of Impact Factor") +
theme_bw() +
theme(plot.title = element_text(hjust = 0.5, size=14, face="bold")) +
geom_point(aes(y = IF, x = Cost,size = Citations,colour = Publisher),
data = results_data,stat="identity") + xlab("Cost in USD")  +  ylab("Impact Factor")
#PDF (dimensions in inches)
dev.new(width=10, height=5,noRStudioGD = TRUE)
p1 + facet_grid(col= vars(Publisher),scales="free_x")
###
cor.test(results_data[,2],as.numeric(results_data[,3]),na.rm = T)
#plot(results_data[,1]*1000,log(as.numeric(results_data[,2])),ylab = "Impact Factor",xlab = "Publication cost in USD")
p1=ggplot() + labs(title = "Cost of Impact Factor") +
theme_bw() +
theme(plot.title = element_text(hjust = 0.5, size=14, face="bold")) +
geom_point(aes(y = IF, x = Cost,size = Papers,colour = Publisher),
data = results_data,stat="identity") + xlab("Cost in USD")  +  ylab("Impact Factor")
#PDF (dimensions in inches)
dev.new(width=10, height=5,noRStudioGD = TRUE)
p1 + facet_grid(col= vars(Publisher),scales="free_x")
head(results_data)
min(results_data[,4])
mazx(results_data[,4])
max(results_data[,4])
results_data[results_data[,4]>40000,4]
results_data[results_data[,4]>40000,]
results_data[results_data[,4]>30000,]
results_data[results_data[,4]>20000,]
results_data[results_data[,4]>10000,]
hist(results_data[,4])
hist(log(results_data[,4]))
results_data$Papers = log(as.numeric(results_data$Papers))
###
cor.test(results_data[,2],as.numeric(results_data[,3]),na.rm = T)
#plot(results_data[,1]*1000,log(as.numeric(results_data[,2])),ylab = "Impact Factor",xlab = "Publication cost in USD")
p1=ggplot() + labs(title = "Cost of Impact Factor") +
theme_bw() +
theme(plot.title = element_text(hjust = 0.5, size=14, face="bold")) +
geom_point(aes(y = IF, x = Cost,size = Papers,colour = Publisher),
data = results_data,stat="identity") + xlab("Cost in USD")  +  ylab("Impact Factor")
#PDF (dimensions in inches)
dev.new(width=10, height=5,noRStudioGD = TRUE)
p1 + facet_grid(col= vars(Publisher),scales="free_x")
results_data = results_data[!is.na(results_data[,2]),]
results_data = results_data[!is.na(results_data[,3]),]
results_data = results_data[!is.na(results_data[,4]),]
results_data = results_data[results_data[,2] != 0,]
results_data = results_data[results_data[,3] != 0,]
results_data = results_data[results_data[,4] != 0,]
results_data$Publisher = as.character(results_data$Publisher )
results_data$Cost = log(as.numeric(results_data$Cost),10)
results_data$IF = log(as.numeric(results_data$IF),10)
results_data$Papers = log(as.numeric(results_data$Papers),10)
cor.test(results_data[,2],as.numeric(results_data[,3]),na.rm = T)
#plot(results_data[,1]*1000,log(as.numeric(results_data[,2])),ylab = "Impact Factor",xlab = "Publication cost in USD")
p1=ggplot() + labs(title = "Cost of Impact Factor") +
theme_bw() +
theme(plot.title = element_text(hjust = 0.5, size=14, face="bold")) +
geom_point(aes(y = IF, x = Cost,size = Papers,colour = Publisher),
data = results_data,stat="identity") + xlab("Cost in USD")  +  ylab("Impact Factor")
#PDF (dimensions in inches)
dev.new(width=10, height=5,noRStudioGD = TRUE)
p1 + facet_grid(col= vars(Publisher),scales="free_x")
results_data = results[results[,3]!=0,]
results_data = results_data[!is.na(results_data[,2]),]
results_data = results_data[!is.na(results_data[,3]),]
results_data = results_data[!is.na(results_data[,4]),]
results_data = results_data[results_data[,2] != 0,]
results_data = results_data[results_data[,3] != 0,]
results_data = results_data[results_data[,4] != 0,]
results_data$Publisher = as.character(results_data$Publisher )
results_data$Cost = log(as.numeric(results_data$Cost),10)
results_data$IF = log(as.numeric(results_data$IF),10)
results_data$Papers = log(as.numeric(results_data$Papers),10)
cor.test(results_data[,2],as.numeric(results_data[,3]),na.rm = T)
#plot(results_data[,1]*1000,log(as.numeric(results_data[,2])),ylab = "Impact Factor",xlab = "Publication cost in USD")
p1=ggplot() + labs(title = "Cost of Impact Factor") +
theme_bw() +
theme(plot.title = element_text(hjust = 0.5, size=14, face="bold")) +
geom_point(aes(y = IF, x = Cost,size = Papers,colour = Publisher),
data = results_data,stat="identity") + xlab("Cost in USD")  +  ylab("Impact Factor")
#PDF (dimensions in inches)
dev.new(width=10, height=5,noRStudioGD = TRUE)
p1 + facet_grid(col= vars(Publisher),scales="free_x")
library(radix)
library(leaflet)
?leaflet
install.packages("radix")
install.packages("radix")
library(radix)
?leaflet
library(radix)
?leaflet
library(leaflet)
knitr::opts_chunk$set(echo = TRUE)
library(leaflet)
leaflet() %>%
addTiles() %>%
addMarkers(lng=174.768, lat=-36.852,popup="The birthplace of R")
library(leaflet)
getwd()
library(edger)
library(edgeR)
BiocManager::install("edgeR", version = "3.8")
library(edgeR)
?p.adjust
require(graphics)
set.seed(123)
x <- rnorm(50, mean = c(rep(0, 25), rep(3, 25)))
p <- 2*pnorm(sort(-abs(x)))
round(p, 3)
round(p.adjust(p), 3)
round(p.adjust(p, "BH"), 3)
hist(p)
hist(p.adjust())
hist(p.adjust(p))
hist(p)
hist(p,breaks = 100)
hist(p.adjust(p),100)
hist(p.adjust(p,"BH"),100)
hist(p.adjust(p,"b"),100)
hist(p.adjust(p,"BH"),100)
hist(p.adjust(p,"BH"),100)
hist(qvalue(p,"BH"),100)
library(qvalue)
hist(qvalue(p,"BH"),100)
hist(qvalue(p),100)
q = qvalue(p)
min(p)
x <- rnorm(1000, mean = c(rep(0, 25), rep(3, 25)))
p <- 2*pnorm(sort(-abs(x)))
hist(p)
min(p)
max(p)
hist(qvalue(p),100)
q =(qvalue(p))
str(q)
hist(q$qvalues,100)
hist(p.adjust(p,"BH"),100)
hist(p.adjust(p,"b"),100)
knitr::opts_chunk$set(echo = TRUE)
plot(pressure)
x = rexp(1000)
min(x)
max(x)
hist(x)
#Running some R code.
x = rexp(1000)
min(x)
#Running some R code.
x = rexp(1000)
min(x)
max(x)
hist(x)
c(c('25%', '25%'),c('25%', '25%'))
rbind(c('25%', '25%'),c('25%', '25%'))
getwd()
7340-119
700*0.2
170000 + 20 000
170000 + 20000
?read.table
14.4+6.9+8.7+3.5
?points()
data = x(1:10)
data = c(1:10)
boxplot(data)
points(jitter(data))
jitter(data)
points(1,data)
points(rep(1,10),data)
points(jitter(rep(1,10)),data)
setwd("~/Desktop/")
grep = "grep -v '^\-\-$' test"
grep = paste("grep -v '^\-\-$'"," test",sep = "")
grep = paste("grep -v '^\\-\\-$'"," test",sep = "")
grep
system(grep)
getwd()
setwd("~/")
system(grep)
bowtie2_align = paste("bowtie2 -p 2 -x sequences/reference sequences/",ribo_out,"  >sequences/",bowtie_out,sep = "")
x = jitter(1,1,1,2,2,2,3,3,3)
x = jitter(c(1,1,1,2,2,2,3,3,3))
x
y = c(rep("h",3),rep("y",3),rep(z,3))
spe = c(rep("h",3),rep("y",3),rep("z",3))
spe
sex = c("F","M","M","M","M","M","M","F","F")
sex
seq = c("o","n","b","o","n","n","n","n","o")
seq
all = data.frame(x,spe,sex,seq)
all
anova(lm(sex~spe,data=all)
)
str(all)
anova(lm(x~spe,data=all))
anova(lm(x~spe+sex,data=all))
anova(lm(x~spe+sex+seq,data=all))
anova(lm(x~spe+sex+seq,data=all))
anova(lm(x~spe+sex*seq,data=all))
anova(lm(x~spe*sex*seq,data=all))
all
anova(lm(x~spe,data=all))
anova(lm(x~sex,data=all))
getwd()
install.packages("pagedown")
#' @examples
library(posterdown)
devtools::install_github("brentthorne/posterdown")
?posterdown
citation()
getwd()
dim(dna)
dna <- ape::read.dna("results/dolicho/Dolicho_genome.fasta", format = "fasta")
#setwd and packages and modified nls_err function
setwd("/Users/jerry/Documents/CSBQ/shapiro")
source("Rcode/factory.R")
library(vcfR)
library(qvalue)
library(lubridate)
library(ggplot2)
library(gridExtra)
library(RColorBrewer)
#load vcf and reference
vcf <- read.vcfR("results/dolicho/dolicho_genome.vcf")
dna <- ape::read.dna("results/dolicho/Dolicho_genome.fasta", format = "fasta")
dim(dna)
paste(dna[1,1957991:1958627],collapse = "")
x = paste(dna[1,1:5165988],collapse = "")
write.table(x,"~/Desktop/x.txt")
