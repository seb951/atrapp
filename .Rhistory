stringsAsFactors = F)
colnames(winner_candidate)[2] = "fraction"
winner_candidate$dates = ymd(gsub(".$","",winner_candidate$dates))
winner_candidate$dates_intervals = dates_intervals
#graph parameters
par(mgp = c(3.5,2,1),mar = c(5,5,4,2))
reg = ggplot(winner_candidate) +
geom_smooth(aes(x = dates_intervals,y = fraction),data = winner_candidate[winner_candidate[,1]=="St1",],method = "glm",method.args = list(family = "binomial"),se = FALSE,col = "darkgreen",fullrange=TRUE) +
geom_smooth(aes(x = dates_intervals,y = fraction),data = winner_candidate[winner_candidate[,1]=="St2",],method = "glm",method.args = list(family = "binomial"),se = FALSE,col = "blue",fullrange=TRUE) +
geom_smooth(aes(x = dates_intervals,y = fraction),data = winner_candidate[winner_candidate[,1]=="PRM",],method = "lm",se = FALSE,col = "red",fullrange=F) +
#geom_smooth(aes(x = dates_intervals,y = fraction),data=winner_candidate,method = "glm",method.args = list(family = "binomial"),se = T,col = "black") +
geom_point(aes(x = dates_intervals,y = fraction,col =location),size = 4) +
xlab("Nb days since June 1st") +
scale_x_continuous(breaks=c(0,25,50,75,100,125,150))
reg
w = 1
###ggplot candidates
winner_candidate = data.frame(location = unlist(lapply(strsplit(colnames(vcf_genotype_filter)[1:65],split = "-"), `[[`, 1)),
fraction = t(fraction_filt[winners_7[w],]),
dates = unlist(lapply(strsplit(colnames(vcf_genotype_filter)[1:65],split = "-"), `[[`, 2)),
stringsAsFactors = F)
colnames(winner_candidate)[2] = "fraction"
winner_candidate$dates = ymd(gsub(".$","",winner_candidate$dates))
winner_candidate$dates_intervals = dates_intervals
#graph parameters
par(mgp = c(3.5,2,1),mar = c(5,5,4,2))
reg = ggplot(winner_candidate) +
geom_smooth(aes(x = dates_intervals,y = fraction),data = winner_candidate[winner_candidate[,1]=="St1",],method = "glm",method.args = list(family = "binomial"),se = FALSE,col = "darkgreen",fullrange=TRUE) +
geom_smooth(aes(x = dates_intervals,y = fraction),data = winner_candidate[winner_candidate[,1]=="St2",],method = "glm",method.args = list(family = "binomial"),se = FALSE,col = "blue",fullrange=TRUE) +
geom_smooth(aes(x = dates_intervals,y = fraction),data = winner_candidate[winner_candidate[,1]=="PRM",],method = "lm",se = FALSE,col = "red",fullrange=F) +
#geom_smooth(aes(x = dates_intervals,y = fraction),data=winner_candidate,method = "glm",method.args = list(family = "binomial"),se = T,col = "black") +
geom_point(aes(x = dates_intervals,y = fraction,col =location),size = 4) +
xlab("Nb days since June 1st") +
scale_x_continuous(breaks=c(0,25,50,75,100,125,150))
reg
dedev.new()
par(mgp = c(3.5,2,1),mar = c(5,5,4,2))
reg = ggplot(winner_candidate) +
geom_smooth(aes(x = dates_intervals,y = fraction),data = winner_candidate[winner_candidate[,1]=="St1",],method = "glm",method.args = list(family = "binomial"),se = FALSE,col = "darkgreen",fullrange=TRUE) +
geom_smooth(aes(x = dates_intervals,y = fraction),data = winner_candidate[winner_candidate[,1]=="St2",],method = "glm",method.args = list(family = "binomial"),se = FALSE,col = "blue",fullrange=TRUE) +
geom_smooth(aes(x = dates_intervals,y = fraction),data = winner_candidate[winner_candidate[,1]=="PRM",],method = "lm",se = FALSE,col = "red",fullrange=F) +
#geom_smooth(aes(x = dates_intervals,y = fraction),data=winner_candidate,method = "glm",method.args = list(family = "binomial"),se = T,col = "black") +
geom_point(aes(x = dates_intervals,y = fraction,col =location),size = 4) +
xlab("Nb days since June 1st") +
scale_x_continuous(breaks=c(0,25,50,75,100,125,150))
reg
dev.new()
par(mgp = c(3.5,2,1),mar = c(5,5,4,2))
reg = ggplot(winner_candidate) +
geom_smooth(aes(x = dates_intervals,y = fraction),data = winner_candidate[winner_candidate[,1]=="St1",],method = "glm",method.args = list(family = "binomial"),se = FALSE,col = "darkgreen",fullrange=TRUE) +
geom_smooth(aes(x = dates_intervals,y = fraction),data = winner_candidate[winner_candidate[,1]=="St2",],method = "glm",method.args = list(family = "binomial"),se = FALSE,col = "blue",fullrange=TRUE) +
geom_smooth(aes(x = dates_intervals,y = fraction),data = winner_candidate[winner_candidate[,1]=="PRM",],method = "lm",se = FALSE,col = "red",fullrange=F) +
#geom_smooth(aes(x = dates_intervals,y = fraction),data=winner_candidate,method = "glm",method.args = list(family = "binomial"),se = T,col = "black") +
geom_point(aes(x = dates_intervals,y = fraction,col =location),size = 4) +
xlab("Nb days since June 1st") +
scale_x_continuous(breaks=c(0,25,50,75,100,125,150))
reg
w = 2
###ggplot candidates
winner_candidate = data.frame(location = unlist(lapply(strsplit(colnames(vcf_genotype_filter)[1:65],split = "-"), `[[`, 1)),
fraction = t(fraction_filt[winners_7[w],]),
dates = unlist(lapply(strsplit(colnames(vcf_genotype_filter)[1:65],split = "-"), `[[`, 2)),
stringsAsFactors = F)
colnames(winner_candidate)[2] = "fraction"
winner_candidate$dates = ymd(gsub(".$","",winner_candidate$dates))
winner_candidate$dates_intervals = dates_intervals
#graph parameters
dev.new()
par(mgp = c(3.5,2,1),mar = c(5,5,4,2))
reg = ggplot(winner_candidate) +
geom_smooth(aes(x = dates_intervals,y = fraction),data = winner_candidate[winner_candidate[,1]=="St1",],method = "glm",method.args = list(family = "binomial"),se = FALSE,col = "darkgreen",fullrange=TRUE) +
geom_smooth(aes(x = dates_intervals,y = fraction),data = winner_candidate[winner_candidate[,1]=="St2",],method = "glm",method.args = list(family = "binomial"),se = FALSE,col = "blue",fullrange=TRUE) +
geom_smooth(aes(x = dates_intervals,y = fraction),data = winner_candidate[winner_candidate[,1]=="PRM",],method = "lm",se = FALSE,col = "red",fullrange=F) +
#geom_smooth(aes(x = dates_intervals,y = fraction),data=winner_candidate,method = "glm",method.args = list(family = "binomial"),se = T,col = "black") +
geom_point(aes(x = dates_intervals,y = fraction,col =location),size = 4) +
xlab("Nb days since June 1st") +
scale_x_continuous(breaks=c(0,25,50,75,100,125,150))
reg
dev.new()
par(mgp = c(3.5,2,1),mar = c(5,5,4,2),mfrow = c(5,4))
for(w in 1:20)
{
###ggplot candidates
winner_candidate = data.frame(location = unlist(lapply(strsplit(colnames(vcf_genotype_filter)[1:65],split = "-"), `[[`, 1)),
fraction = t(fraction_filt[winners_7[w],]),
dates = unlist(lapply(strsplit(colnames(vcf_genotype_filter)[1:65],split = "-"), `[[`, 2)),
stringsAsFactors = F)
colnames(winner_candidate)[2] = "fraction"
winner_candidate$dates = ymd(gsub(".$","",winner_candidate$dates))
winner_candidate$dates_intervals = dates_intervals
#graph parameters
reg = ggplot(winner_candidate) +
geom_smooth(aes(x = dates_intervals,y = fraction),data = winner_candidate[winner_candidate[,1]=="St1",],method = "glm",method.args = list(family = "binomial"),se = FALSE,col = "darkgreen",fullrange=TRUE) +
geom_smooth(aes(x = dates_intervals,y = fraction),data = winner_candidate[winner_candidate[,1]=="St2",],method = "glm",method.args = list(family = "binomial"),se = FALSE,col = "blue",fullrange=TRUE) +
geom_smooth(aes(x = dates_intervals,y = fraction),data = winner_candidate[winner_candidate[,1]=="PRM",],method = "lm",se = FALSE,col = "red",fullrange=F) +
#geom_smooth(aes(x = dates_intervals,y = fraction),data=winner_candidate,method = "glm",method.args = list(family = "binomial"),se = T,col = "black") +
geom_point(aes(x = dates_intervals,y = fraction,col =location),size = 4) +
xlab("Nb days since June 1st") +
scale_x_continuous(breaks=c(0,25,50,75,100,125,150))
reg
}
w
for(w in 1:20)
{
###ggplot candidates
winner_candidate = data.frame(location = unlist(lapply(strsplit(colnames(vcf_genotype_filter)[1:65],split = "-"), `[[`, 1)),
fraction = t(fraction_filt[winners_7[w],]),
dates = unlist(lapply(strsplit(colnames(vcf_genotype_filter)[1:65],split = "-"), `[[`, 2)),
stringsAsFactors = F)
colnames(winner_candidate)[2] = "fraction"
winner_candidate$dates = ymd(gsub(".$","",winner_candidate$dates))
winner_candidate$dates_intervals = dates_intervals
#graph parameters
reg = ggplot(winner_candidate) +
geom_smooth(aes(x = dates_intervals,y = fraction),data = winner_candidate[winner_candidate[,1]=="St1",],method = "glm",method.args = list(family = "binomial"),se = FALSE,col = "darkgreen",fullrange=TRUE) +
geom_smooth(aes(x = dates_intervals,y = fraction),data = winner_candidate[winner_candidate[,1]=="St2",],method = "glm",method.args = list(family = "binomial"),se = FALSE,col = "blue",fullrange=TRUE) +
geom_smooth(aes(x = dates_intervals,y = fraction),data = winner_candidate[winner_candidate[,1]=="PRM",],method = "lm",se = FALSE,col = "red",fullrange=F) +
#geom_smooth(aes(x = dates_intervals,y = fraction),data=winner_candidate,method = "glm",method.args = list(family = "binomial"),se = T,col = "black") +
geom_point(aes(x = dates_intervals,y = fraction,col =location),size = 4) +
xlab("Nb days since June 1st") +
scale_x_continuous(breaks=c(0,25,50,75,100,125,150))
reg
}
reg
dev.new()
par(mgp = c(3.5,2,1),mar = c(5,5,4,2))
reg_list = list()
for(w in 1:20)
{
###ggplot candidates
winner_candidate = data.frame(location = unlist(lapply(strsplit(colnames(vcf_genotype_filter)[1:65],split = "-"), `[[`, 1)),
fraction = t(fraction_filt[winners_7[w],]),
dates = unlist(lapply(strsplit(colnames(vcf_genotype_filter)[1:65],split = "-"), `[[`, 2)),
stringsAsFactors = F)
colnames(winner_candidate)[2] = "fraction"
winner_candidate$dates = ymd(gsub(".$","",winner_candidate$dates))
winner_candidate$dates_intervals = dates_intervals
#graph parameters
reg_list[[w]] = ggplot(winner_candidate) +
geom_smooth(aes(x = dates_intervals,y = fraction),data = winner_candidate[winner_candidate[,1]=="St1",],method = "glm",method.args = list(family = "binomial"),se = FALSE,col = "darkgreen",fullrange=TRUE) +
geom_smooth(aes(x = dates_intervals,y = fraction),data = winner_candidate[winner_candidate[,1]=="St2",],method = "glm",method.args = list(family = "binomial"),se = FALSE,col = "blue",fullrange=TRUE) +
geom_smooth(aes(x = dates_intervals,y = fraction),data = winner_candidate[winner_candidate[,1]=="PRM",],method = "lm",se = FALSE,col = "red",fullrange=F) +
#geom_smooth(aes(x = dates_intervals,y = fraction),data=winner_candidate,method = "glm",method.args = list(family = "binomial"),se = T,col = "black") +
geom_point(aes(x = dates_intervals,y = fraction,col =location),size = 4) +
xlab("Nb days since June 1st") +
scale_x_continuous(breaks=c(0,25,50,75,100,125,150))
}
grid.arrange()
library(gridExtra)
library(gridExtra)
grid.arrange()
?grid.arrange()
grid.arrange(reg_list)
grid.arrange(reg_list[[1]],reg_list[[2]])
grid.arrange(reg_list[[1]],reg_list[[2]],reg_list[[3]],reg_list[[4]],reg_list[[5]],reg_list[[6]],reg_list[[7]],reg_list[[8]],reg_list[[9]])
w = 4
###ggplot candidates
winner_candidate = data.frame(location = unlist(lapply(strsplit(colnames(vcf_genotype_filter)[1:65],split = "-"), `[[`, 1)),
fraction = t(fraction_filt[winners_7[w],]),
dates = unlist(lapply(strsplit(colnames(vcf_genotype_filter)[1:65],split = "-"), `[[`, 2)),
stringsAsFactors = F)
winner_candidate
main = vcf_genotype_filter$chrom[winners_7[w]]
ylab = paste(vcf_genotype_filter[winners_7[w],67],"/",vcf_genotype_filter[winners_7[w],68]," allele",sep = "")
main
ylbb
ylaba
ylab
?xalb
?xlab
w = 4
###ggplot candidates
winner_candidate = data.frame(location = unlist(lapply(strsplit(colnames(vcf_genotype_filter)[1:65],split = "-"), `[[`, 1)),
fraction = t(fraction_filt[winners_7[w],]),
dates = unlist(lapply(strsplit(colnames(vcf_genotype_filter)[1:65],split = "-"), `[[`, 2)),
stringsAsFactors = F)
colnames(winner_candidate)[2] = "fraction"
winner_candidate$dates = ymd(gsub(".$","",winner_candidate$dates))
winner_candidate$dates_intervals = dates_intervals
#graph parameters
reg_list[[w]] = ggplot(winner_candidate) +
geom_smooth(aes(x = dates_intervals,y = fraction),data = winner_candidate[winner_candidate[,1]=="St1",],method = "glm",method.args = list(family = "binomial"),se = FALSE,col = "darkgreen",fullrange=TRUE) +
geom_smooth(aes(x = dates_intervals,y = fraction),data = winner_candidate[winner_candidate[,1]=="St2",],method = "glm",method.args = list(family = "binomial"),se = FALSE,col = "blue",fullrange=TRUE) +
geom_smooth(aes(x = dates_intervals,y = fraction),data = winner_candidate[winner_candidate[,1]=="PRM",],method = "lm",se = FALSE,col = "red",fullrange=F) +
#geom_smooth(aes(x = dates_intervals,y = fraction),data=winner_candidate,method = "glm",method.args = list(family = "binomial"),se = T,col = "black") +
geom_point(aes(x = dates_intervals,y = fraction,col =location),size = 4) +
xlab("Nb days since June 1st") +
ggtitle(vcf_genotype_filter$chrom[winners_7[w]])
ylab(paste(vcf_genotype_filter[winners_7[w],67],"/",vcf_genotype_filter[winners_7[w],68]," allele (fraction)",sep = "")) +
scale_x_continuous(breaks=c(0,25,50,75,100,125,150))
#}
reg
w = 4
###ggplot candidates
winner_candidate = data.frame(location = unlist(lapply(strsplit(colnames(vcf_genotype_filter)[1:65],split = "-"), `[[`, 1)),
fraction = t(fraction_filt[winners_7[w],]),
dates = unlist(lapply(strsplit(colnames(vcf_genotype_filter)[1:65],split = "-"), `[[`, 2)),
stringsAsFactors = F)
colnames(winner_candidate)[2] = "fraction"
winner_candidate$dates = ymd(gsub(".$","",winner_candidate$dates))
winner_candidate$dates_intervals = dates_intervals
#graph parameters
reg_list[[w]] = ggplot(winner_candidate) +
geom_smooth(aes(x = dates_intervals,y = fraction),data = winner_candidate[winner_candidate[,1]=="St1",],method = "glm",method.args = list(family = "binomial"),se = FALSE,col = "darkgreen",fullrange=TRUE) +
geom_smooth(aes(x = dates_intervals,y = fraction),data = winner_candidate[winner_candidate[,1]=="St2",],method = "glm",method.args = list(family = "binomial"),se = FALSE,col = "blue",fullrange=TRUE) +
geom_smooth(aes(x = dates_intervals,y = fraction),data = winner_candidate[winner_candidate[,1]=="PRM",],method = "lm",se = FALSE,col = "red",fullrange=F) +
#geom_smooth(aes(x = dates_intervals,y = fraction),data=winner_candidate,method = "glm",method.args = list(family = "binomial"),se = T,col = "black") +
geom_point(aes(x = dates_intervals,y = fraction,col =location),size = 4) +
xlab("Nb days since June 1st") +
ggtitle(vcf_genotype_filter$chrom[winners_7[w]])
ylab(paste(vcf_genotype_filter[winners_7[w],67],"/",vcf_genotype_filter[winners_7[w],68]," allele (fraction)",sep = "")) +
scale_x_continuous(breaks=c(0,25,50,75,100,125,150))
#}
reg
w = 4
###ggplot candidates
winner_candidate = data.frame(location = unlist(lapply(strsplit(colnames(vcf_genotype_filter)[1:65],split = "-"), `[[`, 1)),
fraction = t(fraction_filt[winners_7[w],]),
dates = unlist(lapply(strsplit(colnames(vcf_genotype_filter)[1:65],split = "-"), `[[`, 2)),
stringsAsFactors = F)
colnames(winner_candidate)[2] = "fraction"
winner_candidate$dates = ymd(gsub(".$","",winner_candidate$dates))
winner_candidate$dates_intervals = dates_intervals
#graph parameters
reg_list[[w]] = ggplot(winner_candidate) +
geom_smooth(aes(x = dates_intervals,y = fraction),data = winner_candidate[winner_candidate[,1]=="St1",],method = "glm",method.args = list(family = "binomial"),se = FALSE,col = "darkgreen",fullrange=TRUE) +
geom_smooth(aes(x = dates_intervals,y = fraction),data = winner_candidate[winner_candidate[,1]=="St2",],method = "glm",method.args = list(family = "binomial"),se = FALSE,col = "blue",fullrange=TRUE) +
geom_smooth(aes(x = dates_intervals,y = fraction),data = winner_candidate[winner_candidate[,1]=="PRM",],method = "lm",se = FALSE,col = "red",fullrange=F) +
#geom_smooth(aes(x = dates_intervals,y = fraction),data=winner_candidate,method = "glm",method.args = list(family = "binomial"),se = T,col = "black") +
geom_point(aes(x = dates_intervals,y = fraction,col =location),size = 4) +
xlab("Nb days since June 1st") +
ggtitle(vcf_genotype_filter$chrom[winners_7[w]]) +
ylab(paste(vcf_genotype_filter[winners_7[w],67],"/",vcf_genotype_filter[winners_7[w],68]," allele (fraction)",sep = "")) +
scale_x_continuous(breaks=c(0,25,50,75,100,125,150))
#}
reg
###ggplot candidates
winner_candidate = data.frame(location = unlist(lapply(strsplit(colnames(vcf_genotype_filter)[1:65],split = "-"), `[[`, 1)),
fraction = t(fraction_filt[winners_7[w],]),
dates = unlist(lapply(strsplit(colnames(vcf_genotype_filter)[1:65],split = "-"), `[[`, 2)),
stringsAsFactors = F)
colnames(winner_candidate)[2] = "fraction"
winner_candidate$dates = ymd(gsub(".$","",winner_candidate$dates))
winner_candidate$dates_intervals = dates_intervals
#graph parameters
reg_list[[w]] = ggplot(winner_candidate) +
geom_smooth(aes(x = dates_intervals,y = fraction),data = winner_candidate[winner_candidate[,1]=="St1",],method = "glm",method.args = list(family = "binomial"),se = FALSE,col = "darkgreen",fullrange=TRUE) +
geom_smooth(aes(x = dates_intervals,y = fraction),data = winner_candidate[winner_candidate[,1]=="St2",],method = "glm",method.args = list(family = "binomial"),se = FALSE,col = "blue",fullrange=TRUE) +
geom_smooth(aes(x = dates_intervals,y = fraction),data = winner_candidate[winner_candidate[,1]=="PRM",],method = "lm",se = FALSE,col = "red",fullrange=F) +
#geom_smooth(aes(x = dates_intervals,y = fraction),data=winner_candidate,method = "glm",method.args = list(family = "binomial"),se = T,col = "black") +
geom_point(aes(x = dates_intervals,y = fraction,col =location),size = 4) +
xlab("Nb days since June 1st") +
ggtitle("dadad") +
#ggtitle(vcf_genotype_filter$chrom[winners_7[w]]) +
ylab(paste(vcf_genotype_filter[winners_7[w],67],"/",vcf_genotype_filter[winners_7[w],68]," allele (fraction)",sep = "")) +
scale_x_continuous(breaks=c(0,25,50,75,100,125,150))
#}
reg
dev.new()
par(mgp = c(3.5,2,1),mar = c(5,5,4,2))
w = 4
###ggplot candidates
winner_candidate = data.frame(location = unlist(lapply(strsplit(colnames(vcf_genotype_filter)[1:65],split = "-"), `[[`, 1)),
fraction = t(fraction_filt[winners_7[w],]),
dates = unlist(lapply(strsplit(colnames(vcf_genotype_filter)[1:65],split = "-"), `[[`, 2)),
stringsAsFactors = F)
colnames(winner_candidate)[2] = "fraction"
winner_candidate$dates = ymd(gsub(".$","",winner_candidate$dates))
winner_candidate$dates_intervals = dates_intervals
#graph parameters
reg = ggplot(winner_candidate) +
geom_smooth(aes(x = dates_intervals,y = fraction),data = winner_candidate[winner_candidate[,1]=="St1",],method = "glm",method.args = list(family = "binomial"),se = FALSE,col = "darkgreen",fullrange=TRUE) +
geom_smooth(aes(x = dates_intervals,y = fraction),data = winner_candidate[winner_candidate[,1]=="St2",],method = "glm",method.args = list(family = "binomial"),se = FALSE,col = "blue",fullrange=TRUE) +
geom_smooth(aes(x = dates_intervals,y = fraction),data = winner_candidate[winner_candidate[,1]=="PRM",],method = "lm",se = FALSE,col = "red",fullrange=F) +
#geom_smooth(aes(x = dates_intervals,y = fraction),data=winner_candidate,method = "glm",method.args = list(family = "binomial"),se = T,col = "black") +
geom_point(aes(x = dates_intervals,y = fraction,col =location),size = 4) +
xlab("Nb days since June 1st") +
ggtitle(vcf_genotype_filter$chrom[winners_7[w]]) +
ylab(paste(vcf_genotype_filter[winners_7[w],67],"/",vcf_genotype_filter[winners_7[w],68]," allele (fraction)",sep = "")) +
scale_x_continuous(breaks=c(0,25,50,75,100,125,150))
reg
dev.new()
par(mgp = c(3.5,2,1),mar = c(5,5,4,2))
w = 4
###ggplot candidates
winner_candidate = data.frame(location = unlist(lapply(strsplit(colnames(vcf_genotype_filter)[1:65],split = "-"), `[[`, 1)),
fraction = t(fraction_filt[winners_7[w],]),
dates = unlist(lapply(strsplit(colnames(vcf_genotype_filter)[1:65],split = "-"), `[[`, 2)),
stringsAsFactors = F)
colnames(winner_candidate)[2] = "fraction"
winner_candidate$dates = ymd(gsub(".$","",winner_candidate$dates))
winner_candidate$dates_intervals = dates_intervals
#graph parameters
reg = ggplot(winner_candidate) +
geom_smooth(aes(x = dates_intervals,y = fraction),data = winner_candidate[winner_candidate[,1]=="St1",],method = "glm",method.args = list(family = "binomial"),se = FALSE,col = "darkgreen",fullrange=TRUE) +
geom_smooth(aes(x = dates_intervals,y = fraction),data = winner_candidate[winner_candidate[,1]=="St2",],method = "glm",method.args = list(family = "binomial"),se = FALSE,col = "blue",fullrange=TRUE) +
geom_smooth(aes(x = dates_intervals,y = fraction),data = winner_candidate[winner_candidate[,1]=="PRM",],method = "lm",se = FALSE,col = "red",fullrange=F) +
#geom_smooth(aes(x = dates_intervals,y = fraction),data=winner_candidate,method = "glm",method.args = list(family = "binomial"),se = T,col = "black") +
geom_point(aes(x = dates_intervals,y = fraction,col =location),size = 4) +
theme(plot.title = element_text(hjust = 0.5)) +
xlab("Nb days since June 1st") +
ggtitle(vcf_genotype_filter$chrom[winners_7[w]]) +
ylab(paste(vcf_genotype_filter[winners_7[w],67],"/",vcf_genotype_filter[winners_7[w],68]," allele (fraction)",sep = "")) +
scale_x_continuous(breaks=c(0,25,50,75,100,125,150))
reg
dev.print(device=pdf,"../results/dolicho/figures/candidate_ggplot.pdf", onefile=FALSE)
dev.off()
?ggtitle
setwd("/Users/jerry/Documents/CSBQ/shapiro")
#coordinates of the 3 circles
circle.positions <- data.frame(x = c(0, 0.866, -0.866),y = c(1, -0.5, -0.5),labels = c('St1', 'St2', 'PRM'))
#data
winners = read.table("results/dolicho/winners")
winners=format(winners,big.mark  = ",")
winners[,1] = gsub(" ","",winners[,1])
winners[,2] = gsub(" ","",winners[,2])
circle.data = data.frame(x.position = c(0, 1.4, -1.4,0.8, -0.8, 0, 0),y.position = c(1.6, -1,-1, 0.25,0.25, -1.25, -0.2),
categories = c("St1","St2","PRM","St1-St2","St1-PRM","St2-PRM","St1-St2-PRM"),counts=winners[3:9,1],
counts_genes=paste("(",winners[3:9,2], ")", sep = ""),stringsAsFactors = F)
circle.data$counts_genes[1] = "(669 genes)"
circle.data$counts[1] = "1,493 SNPs"
circle.data$counts_modif = paste(circle.data$counts,circle.data$counts_genes)
rectangle.data = data.frame(x.position = -1.4, y.position = 2.3,
counts = paste(winners[1,1]," SNPs in ",winners[1,2]," genes\n (Filtered: ",winners[2,1]," SNPs in ",winners[2,2]," genes)",sep = ""))
####ggplot + geom_circle function
#geom_circle will draw the circles, with various options to make it prettier
#annotate will add text
venn = ggplot(circle.positions) +
geom_circle(aes(x0 = x, y0 = y, r = 1.5, fill = labels), alpha = .3, size = 1,colour="black") +
coord_fixed() +
theme_void() +
theme(legend.position = 'bottom') +
#  scale_fill_manual(values = c("#000000","#0000FF","#FF0000")) +
labs(fill = NULL) +
annotate("text", x = circle.data$x.position, y = circle.data$y.position+0.2, label = circle.data$counts_modif, size = 4) +
# annotate("text", x = circle.data$x.position[1:3], y = circle.data$y.position[1:3]-0.2, label = circle.data$counts_totals[1:3], size = 3) +
annotate("text", x = rectangle.data$x.position, y = rectangle.data$y.position, label = rectangle.data$counts, size = 4,fontface =2)
library(ggforce)
setwd("/Users/jerry/Documents/CSBQ/shapiro")
#coordinates of the 3 circles
circle.positions <- data.frame(x = c(0, 0.866, -0.866),y = c(1, -0.5, -0.5),labels = c('St1', 'St2', 'PRM'))
#data
winners = read.table("results/dolicho/winners")
winners=format(winners,big.mark  = ",")
winners[,1] = gsub(" ","",winners[,1])
winners[,2] = gsub(" ","",winners[,2])
circle.data = data.frame(x.position = c(0, 1.4, -1.4,0.8, -0.8, 0, 0),y.position = c(1.6, -1,-1, 0.25,0.25, -1.25, -0.2),
categories = c("St1","St2","PRM","St1-St2","St1-PRM","St2-PRM","St1-St2-PRM"),counts=winners[3:9,1],
counts_genes=paste("(",winners[3:9,2], ")", sep = ""),stringsAsFactors = F)
circle.data$counts_genes[1] = "(669 genes)"
circle.data$counts[1] = "1,493 SNPs"
circle.data$counts_modif = paste(circle.data$counts,circle.data$counts_genes)
rectangle.data = data.frame(x.position = -1.4, y.position = 2.3,
counts = paste(winners[1,1]," SNPs in ",winners[1,2]," genes\n (Filtered: ",winners[2,1]," SNPs in ",winners[2,2]," genes)",sep = ""))
####ggplot + geom_circle function
#geom_circle will draw the circles, with various options to make it prettier
#annotate will add text
venn = ggplot(circle.positions) +
geom_circle(aes(x0 = x, y0 = y, r = 1.5, fill = labels), alpha = .3, size = 1,colour="black") +
coord_fixed() +
theme_void() +
theme(legend.position = 'bottom') +
#  scale_fill_manual(values = c("#000000","#0000FF","#FF0000")) +
labs(fill = NULL) +
annotate("text", x = circle.data$x.position, y = circle.data$y.position+0.2, label = circle.data$counts_modif, size = 4) +
# annotate("text", x = circle.data$x.position[1:3], y = circle.data$y.position[1:3]-0.2, label = circle.data$counts_totals[1:3], size = 3) +
annotate("text", x = rectangle.data$x.position, y = rectangle.data$y.position, label = rectangle.data$counts, size = 4,fontface =2)
venn
venn = ggplot(circle.positions) +
geom_circle(aes(x0 = x, y0 = y, r = 1.5, fill = labels), alpha = .9, size = 1,colour="black") +
coord_fixed() +
theme_void() +
theme(legend.position = 'bottom') +
#  scale_fill_manual(values = c("#000000","#0000FF","#FF0000")) +
labs(fill = NULL) +
annotate("text", x = circle.data$x.position, y = circle.data$y.position+0.2, label = circle.data$counts_modif, size = 4) +
# annotate("text", x = circle.data$x.position[1:3], y = circle.data$y.position[1:3]-0.2, label = circle.data$counts_totals[1:3], size = 3) +
annotate("text", x = rectangle.data$x.position, y = rectangle.data$y.position, label = rectangle.data$counts, size = 4,fontface =2)
#save graph as pdf on the desktop
#dev.new(width=6, height=6,noRStudioGD = TRUE)
svg("results/dolicho/figures/venn.svg",width=6, height=6)
venn
venn
#geom_circle will draw the circles, with various options to make it prettier
#annotate will add text
venn = ggplot(circle.positions) +
geom_circle(aes(x0 = x, y0 = y, r = 1.5, fill = labels), alpha = .9, size = 1,colour="black") +
coord_fixed() +
theme_void() +
theme(legend.position = 'bottom') +
#  scale_fill_manual(values = c("#000000","#0000FF","#FF0000")) +
labs(fill = NULL) +
annotate("text", x = circle.data$x.position, y = circle.data$y.position+0.2, label = circle.data$counts_modif, size = 4) +
# annotate("text", x = circle.data$x.position[1:3], y = circle.data$y.position[1:3]-0.2, label = circle.data$counts_totals[1:3], size = 3) +
annotate("text", x = rectangle.data$x.position, y = rectangle.data$y.position, label = rectangle.data$counts, size = 4,fontface =2)
venn
dev.off()
dev.off()
dev.off()
venn
#geom_circle will draw the circles, with various options to make it prettier
#annotate will add text
venn = ggplot(circle.positions) +
geom_circle(aes(x0 = x, y0 = y, r = 1.5, fill = labels), alpha = .5, size = 1,colour="black") +
coord_fixed() +
theme_void() +
theme(legend.position = 'bottom') +
#  scale_fill_manual(values = c("#000000","#0000FF","#FF0000")) +
labs(fill = NULL) +
annotate("text", x = circle.data$x.position, y = circle.data$y.position+0.2, label = circle.data$counts_modif, size = 4) +
# annotate("text", x = circle.data$x.position[1:3], y = circle.data$y.position[1:3]-0.2, label = circle.data$counts_totals[1:3], size = 3) +
annotate("text", x = rectangle.data$x.position, y = rectangle.data$y.position, label = rectangle.data$counts, size = 4,fontface =2)
dev.off()
venn
dev.off()
dev.off()
#dev.new(width=6, height=6,noRStudioGD = TRUE)
svg("results/dolicho/figures/venn.svg",width=6, height=6)
venn
#dev.print(device=pdf,"../results/dolicho/venn_figure.pdf", onefile=FALSE)
dev.off()
reg = ggplot(winner_candidate) +
geom_smooth(aes(x = dates_intervals,y = fraction),data = winner_candidate[winner_candidate[,1]=="St1",],method = "glm",method.args = list(family = "binomial"),se = FALSE,col = "darkgreen",fullrange=TRUE) +
geom_smooth(aes(x = dates_intervals,y = fraction),data = winner_candidate[winner_candidate[,1]=="St2",],method = "glm",method.args = list(family = "binomial"),se = FALSE,col = "blue",fullrange=TRUE) +
geom_smooth(aes(x = dates_intervals,y = fraction),data = winner_candidate[winner_candidate[,1]=="PRM",],method = "lm",se = FALSE,col = "red",fullrange=F) +
#geom_smooth(aes(x = dates_intervals,y = fraction),data=winner_candidate,method = "glm",method.args = list(family = "binomial"),se = T,col = "black") +
geom_point(aes(x = dates_intervals,y = fraction,col =location),size = 4) +
theme(plot.title = element_text(hjust = 0.5,face = bold)) +
xlab("Nb days since June 1st") +
ggtitle(vcf_genotype_filter$chrom[winners_7[w]]) +
ylab(paste(vcf_genotype_filter[winners_7[w],67],"/",vcf_genotype_filter[winners_7[w],68]," allele (fraction)",sep = "")) +
scale_x_continuous(breaks=c(0,25,50,75,100,125,150))
reg
dev.new()
par(mgp = c(3.5,2,1),mar = c(5,5,4,2))
w = 4
###ggplot candidates
winner_candidate = data.frame(location = unlist(lapply(strsplit(colnames(vcf_genotype_filter)[1:65],split = "-"), `[[`, 1)),
fraction = t(fraction_filt[winners_7[w],]),
dates = unlist(lapply(strsplit(colnames(vcf_genotype_filter)[1:65],split = "-"), `[[`, 2)),
stringsAsFactors = F)
colnames(winner_candidate)[2] = "fraction"
winner_candidate$dates = ymd(gsub(".$","",winner_candidate$dates))
winner_candidate$dates_intervals = dates_intervals
#graph parameters
reg = ggplot(winner_candidate) +
geom_smooth(aes(x = dates_intervals,y = fraction),data = winner_candidate[winner_candidate[,1]=="St1",],method = "glm",method.args = list(family = "binomial"),se = FALSE,col = "darkgreen",fullrange=TRUE) +
geom_smooth(aes(x = dates_intervals,y = fraction),data = winner_candidate[winner_candidate[,1]=="St2",],method = "glm",method.args = list(family = "binomial"),se = FALSE,col = "blue",fullrange=TRUE) +
geom_smooth(aes(x = dates_intervals,y = fraction),data = winner_candidate[winner_candidate[,1]=="PRM",],method = "lm",se = FALSE,col = "red",fullrange=F) +
#geom_smooth(aes(x = dates_intervals,y = fraction),data=winner_candidate,method = "glm",method.args = list(family = "binomial"),se = T,col = "black") +
geom_point(aes(x = dates_intervals,y = fraction,col =location),size = 4) +
theme(plot.title = element_text(hjust = 0.5,face = "bold")) +
xlab("Nb days since June 1st") +
ggtitle(vcf_genotype_filter$chrom[winners_7[w]]) +
ylab(paste(vcf_genotype_filter[winners_7[w],67],"/",vcf_genotype_filter[winners_7[w],68]," allele (fraction)",sep = "")) +
scale_x_continuous(breaks=c(0,25,50,75,100,125,150))
reg
dev.print(device=pdf,"../results/dolicho/figures/candidate_ggplot.pdf", onefile=FALSE)
dev.off()
getwd()
dev.print(device=pdf,"results/dolicho/figures/candidate_ggplot.pdf", onefile=FALSE)
dev.off()
dev.new()
par(mgp = c(3.5,2,1),mar = c(5,5,4,2))
w = 4
###ggplot candidates
winner_candidate = data.frame(location = unlist(lapply(strsplit(colnames(vcf_genotype_filter)[1:65],split = "-"), `[[`, 1)),
fraction = t(fraction_filt[winners_7[w],]),
dates = unlist(lapply(strsplit(colnames(vcf_genotype_filter)[1:65],split = "-"), `[[`, 2)),
stringsAsFactors = F)
colnames(winner_candidate)[2] = "fraction"
winner_candidate$dates = ymd(gsub(".$","",winner_candidate$dates))
winner_candidate$dates_intervals = dates_intervals
#graph parameters
reg = ggplot(winner_candidate) +
geom_smooth(aes(x = dates_intervals,y = fraction),data = winner_candidate[winner_candidate[,1]=="St1",],method = "glm",method.args = list(family = "binomial"),se = FALSE,col = "darkgreen",fullrange=TRUE) +
geom_smooth(aes(x = dates_intervals,y = fraction),data = winner_candidate[winner_candidate[,1]=="St2",],method = "glm",method.args = list(family = "binomial"),se = FALSE,col = "blue",fullrange=TRUE) +
geom_smooth(aes(x = dates_intervals,y = fraction),data = winner_candidate[winner_candidate[,1]=="PRM",],method = "lm",se = FALSE,col = "red",fullrange=F) +
#geom_smooth(aes(x = dates_intervals,y = fraction),data=winner_candidate,method = "glm",method.args = list(family = "binomial"),se = T,col = "black") +
geom_point(aes(x = dates_intervals,y = fraction,col =location),size = 4) +
theme(plot.title = element_text(hjust = 0.5,face = "bold")) +
xlab("Nb days since June 1st") +
ggtitle(vcf_genotype_filter$chrom[winners_7[w]]) +
ylab(paste(vcf_genotype_filter[winners_7[w],67],"/",vcf_genotype_filter[winners_7[w],68]," allele (fraction)",sep = "")) +
scale_x_continuous(breaks=c(0,25,50,75,100,125,150))
reg
dev.new()
par(mgp = c(3.5,2,1),mar = c(5,5,4,2))
w = 4
###ggplot candidates
winner_candidate = data.frame(location = unlist(lapply(strsplit(colnames(vcf_genotype_filter)[1:65],split = "-"), `[[`, 1)),
fraction = t(fraction_filt[winners_7[w],]),
dates = unlist(lapply(strsplit(colnames(vcf_genotype_filter)[1:65],split = "-"), `[[`, 2)),
stringsAsFactors = F)
colnames(winner_candidate)[2] = "fraction"
winner_candidate$dates = ymd(gsub(".$","",winner_candidate$dates))
winner_candidate$dates_intervals = dates_intervals
#graph parameters
reg = ggplot(winner_candidate) +
geom_smooth(aes(x = dates_intervals,y = fraction),data = winner_candidate[winner_candidate[,1]=="St1",],method = "glm",method.args = list(family = "binomial"),se = FALSE,col = "darkgreen",fullrange=TRUE) +
geom_smooth(aes(x = dates_intervals,y = fraction),data = winner_candidate[winner_candidate[,1]=="St2",],method = "glm",method.args = list(family = "binomial"),se = FALSE,col = "blue",fullrange=TRUE) +
geom_smooth(aes(x = dates_intervals,y = fraction),data = winner_candidate[winner_candidate[,1]=="PRM",],method = "lm",se = FALSE,col = "red",fullrange=F) +
#geom_smooth(aes(x = dates_intervals,y = fraction),data=winner_candidate,method = "glm",method.args = list(family = "binomial"),se = T,col = "black") +
geom_point(aes(x = dates_intervals,y = fraction,col =location),size = 4) +
theme(plot.title = element_text(hjust = 0.5,face = "bold")) +
xlab("Nb days since June 1st") +
ggtitle(vcf_genotype_filter$chrom[winners_7[w]]) +
ylab(paste(vcf_genotype_filter[winners_7[w],67],"/",vcf_genotype_filter[winners_7[w],68]," allele (fraction)",sep = "")) +
scale_x_continuous(breaks=c(0,25,50,75,100,125,150))
reg
dev.print(device=pdf,"results/dolicho/figures/candidate_ggplot.pdf", onefile=FALSE)
dev.off()
