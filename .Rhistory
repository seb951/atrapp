source("Rcode/factory.R")
library(vcfR)
library(qvalue)
library(lubridate)
library(ggplot2)
library(gridExtra)
library(RColorBrewer)
#load vcf and reference
vcf <- read.vcfR("results/dolicho/dolicho_genome.vcf")
dna <- ape::read.dna("results/dolicho/Dolicho_genome.fasta", format = "fasta")
#simplify names of files
samples = unlist(lapply(strsplit(colnames(vcf@gt)[-1],split = "_"), `[[`, 5))
samples = paste(samples,unlist(lapply(strsplit(colnames(vcf@gt)[-1],split = "_"), `[[`, 6)),sep = "-")
samples = gsub("Champ","",samples)
samples = gsub("-WatPhotz-RNA","",samples)
colnames(vcf@gt)[-1] = samples
#get data into a genotype matrix
vcf_genotype = as.data.frame(vcf@gt[,-1],stringsAsFactors = F)
vcf_genotype$chrom = vcf@fix[,1]
vcf_genotype$ref = vcf@fix[,4]
vcf_genotype$alt = vcf@fix[,5]
vcf_genotype$pos = vcf@fix[,2]
#filter to remove homopolymers / microsats
vcf_genotype = vcf_genotype[nchar(vcf_genotype[,67])==1,]
#allleles and fractions
minor = data.frame(matrix(0,nrow = nrow(vcf_genotype), ncol=length(samples)))
major = data.frame(matrix(0,nrow = nrow(vcf_genotype), ncol=length(samples)))
fraction = data.frame(matrix(0,nrow = nrow(vcf_genotype), ncol=length(samples)))
for(j in 1:(ncol(vcf@gt)-1))
{
vcf_genotype[,j] = unlist(lapply(strsplit(vcf_genotype[,j],split = ":"), `[[`, 3))
temp_ref = as.numeric(unlist(lapply(strsplit(vcf_genotype[,j],split = ","), `[[`, 1)))
temp_alt = as.numeric(unlist(lapply(strsplit(vcf_genotype[,j],split = ","), `[[`, 2)))
major[,j] = temp_ref
minor[,j] = temp_alt
fraction[,j] = temp_ref / (temp_ref+temp_alt)
}
###continuous positioning on genome
vcf_genotype$pos = as.numeric(vcf_genotype$pos)
vcf_genotype$relative_pos = 0
vcf_genotype$conti_pos = 0
rle(vcf_genotype[,66])
extra = NULL
for(i in 1:nrow(vcf_genotype))
{
i = i + extra
#this is to add a row once you reach a new scaffold. Will help in the mapping
if((i > 1) && (vcf_genotype[i,66] != vcf_genotype[i-1,66])) {vcf_genotype = vcf_genotype[c(c(1:i),i,((i+1):nrow(vcf_genotype))),];
extra=extra+1;
vcf_genotype[i,70] = vcf_genotype[i,69];
vcf_genotype[(i+1),] =  NA}
if(i ==1) vcf_genotype[i,70] = vcf_genotype[i,69]
if((i > 1) && (vcf_genotype[i,66] == vcf_genotype[i-1,66])) vcf_genotype[i,70] = vcf_genotype[i,69] - vcf_genotype[i-1,69]
# if((i > 1) && (vcf_genotype[i,66] != vcf_genotype[i-1,66])) vcf_genotype[i,70] = vcf_genotype[i,69]
if(i ==1) vcf_genotype[i,71] = vcf_genotype[i,70]
if(i > 1) vcf_genotype[i,71] = vcf_genotype[i,70] + vcf_genotype[i-1,71]
if(i%%10000==0) print(paste("Done: ",i," of ",nrow(vcf_genotype), ", The time is:",Sys.time(),sep = ""))
}
i
extra = 0
for(i in 1:nrow(vcf_genotype))
{
i = i + extra
#this is to add a row once you reach a new scaffold. Will help in the mapping
if((i > 1) && (vcf_genotype[i,66] != vcf_genotype[i-1,66])) {vcf_genotype = vcf_genotype[c(c(1:i),i,((i+1):nrow(vcf_genotype))),];
extra=extra+1;
vcf_genotype[i,70] = vcf_genotype[i,69];
vcf_genotype[(i+1),] =  NA}
if(i ==1) vcf_genotype[i,70] = vcf_genotype[i,69]
if((i > 1) && (vcf_genotype[i,66] == vcf_genotype[i-1,66])) vcf_genotype[i,70] = vcf_genotype[i,69] - vcf_genotype[i-1,69]
# if((i > 1) && (vcf_genotype[i,66] != vcf_genotype[i-1,66])) vcf_genotype[i,70] = vcf_genotype[i,69]
if(i ==1) vcf_genotype[i,71] = vcf_genotype[i,70]
if(i > 1) vcf_genotype[i,71] = vcf_genotype[i,70] + vcf_genotype[i-1,71]
if(i%%10000==0) print(paste("Done: ",i," of ",nrow(vcf_genotype), ", The time is:",Sys.time(),sep = ""))
}
i
extra
vcf_genotype[1:10,66]
vcf_genotype[1:10,65:69]
#get data into a genotype matrix
vcf_genotype = as.data.frame(vcf@gt[,-1],stringsAsFactors = F)
vcf_genotype$chrom = vcf@fix[,1]
vcf_genotype$ref = vcf@fix[,4]
vcf_genotype$alt = vcf@fix[,5]
vcf_genotype$pos = vcf@fix[,2]
#filter to remove homopolymers / microsats
vcf_genotype = vcf_genotype[nchar(vcf_genotype[,67])==1,]
#allleles and fractions
minor = data.frame(matrix(0,nrow = nrow(vcf_genotype), ncol=length(samples)))
major = data.frame(matrix(0,nrow = nrow(vcf_genotype), ncol=length(samples)))
fraction = data.frame(matrix(0,nrow = nrow(vcf_genotype), ncol=length(samples)))
for(j in 1:(ncol(vcf@gt)-1))
{
vcf_genotype[,j] = unlist(lapply(strsplit(vcf_genotype[,j],split = ":"), `[[`, 3))
temp_ref = as.numeric(unlist(lapply(strsplit(vcf_genotype[,j],split = ","), `[[`, 1)))
temp_alt = as.numeric(unlist(lapply(strsplit(vcf_genotype[,j],split = ","), `[[`, 2)))
major[,j] = temp_ref
minor[,j] = temp_alt
fraction[,j] = temp_ref / (temp_ref+temp_alt)
}
###continuous positioning on genome
vcf_genotype$pos = as.numeric(vcf_genotype$pos)
vcf_genotype$relative_pos = 0
vcf_genotype$conti_pos = 0
vcf_genotype$scaff = 0
extra = 0
for(i in 1:nrow(vcf_genotype))
{
i = i + extra
#this is to add a row once you reach a new scaffold. Will help in the mapping
if((i > 1) && (vcf_genotype[i,66] != vcf_genotype[i-1,66])) {vcf_genotype = vcf_genotype[c(c(1:i),i,((i+1):nrow(vcf_genotype))),];
extra=extra+1;
vcf_genotype[i,70] = vcf_genotype[i,69];
vcf_genotype[(i+1),72] =  1}
if(i ==1) vcf_genotype[i,70] = vcf_genotype[i,69]
if((i > 1) && (vcf_genotype[i,66] == vcf_genotype[i-1,66])) vcf_genotype[i,70] = vcf_genotype[i,69] - vcf_genotype[i-1,69]
# if((i > 1) && (vcf_genotype[i,66] != vcf_genotype[i-1,66])) vcf_genotype[i,70] = vcf_genotype[i,69]
if(i ==1) vcf_genotype[i,71] = vcf_genotype[i,70]
if(i > 1) vcf_genotype[i,71] = vcf_genotype[i,70] + vcf_genotype[i-1,71]
if(i%%10000==0) print(paste("Done: ",i," of ",nrow(vcf_genotype), ", The time is:",Sys.time(),sep = ""))
}
extra
i
nrow(vcf_genotype)
rle(vcf_genotype[,66])
vcf_genotype[1:10,66:72]
#get data into a genotype matrix
vcf_genotype = as.data.frame(vcf@gt[,-1],stringsAsFactors = F)
vcf_genotype$chrom = vcf@fix[,1]
vcf_genotype$ref = vcf@fix[,4]
vcf_genotype$alt = vcf@fix[,5]
vcf_genotype$pos = vcf@fix[,2]
#filter to remove homopolymers / microsats
vcf_genotype = vcf_genotype[nchar(vcf_genotype[,67])==1,]
#allleles and fractions
minor = data.frame(matrix(0,nrow = nrow(vcf_genotype), ncol=length(samples)))
major = data.frame(matrix(0,nrow = nrow(vcf_genotype), ncol=length(samples)))
fraction = data.frame(matrix(0,nrow = nrow(vcf_genotype), ncol=length(samples)))
for(j in 1:(ncol(vcf@gt)-1))
{
vcf_genotype[,j] = unlist(lapply(strsplit(vcf_genotype[,j],split = ":"), `[[`, 3))
temp_ref = as.numeric(unlist(lapply(strsplit(vcf_genotype[,j],split = ","), `[[`, 1)))
temp_alt = as.numeric(unlist(lapply(strsplit(vcf_genotype[,j],split = ","), `[[`, 2)))
major[,j] = temp_ref
minor[,j] = temp_alt
fraction[,j] = temp_ref / (temp_ref+temp_alt)
}
###continuous positioning on genome
vcf_genotype$pos = as.numeric(vcf_genotype$pos)
vcf_genotype$relative_pos = 0
vcf_genotype$conti_pos = 0
vcf_genotype$scaff = 0
extra = 0
i
i = 1
i = i + extra
#this is to add a row once you reach a new scaffold. Will help in the mapping
if((i > 1) && (vcf_genotype[i,66] != vcf_genotype[i-1,66])) {vcf_genotype = vcf_genotype[c(c(1:i),i,((i+1):nrow(vcf_genotype))),];
extra=extra+1;
vcf_genotype[i,70] = vcf_genotype[i,69];
vcf_genotype[(i+1),72] =  1}
if(i ==1) vcf_genotype[i,70] = vcf_genotype[i,69]
if((i > 1) && (vcf_genotype[i,66] == vcf_genotype[i-1,66])) vcf_genotype[i,70] = vcf_genotype[i,69] - vcf_genotype[i-1,69]
# if((i > 1) && (vcf_genotype[i,66] != vcf_genotype[i-1,66])) vcf_genotype[i,70] = vcf_genotype[i,69]
if(i ==1) vcf_genotype[i,71] = vcf_genotype[i,70]
if(i > 1) vcf_genotype[i,71] = vcf_genotype[i,70] + vcf_genotype[i-1,71]
i =2
i = i + extra
#this is to add a row once you reach a new scaffold. Will help in the mapping
if((i > 1) && (vcf_genotype[i,66] != vcf_genotype[i-1,66])) {vcf_genotype = vcf_genotype[c(c(1:i),i,((i+1):nrow(vcf_genotype))),];
extra=extra+1;
vcf_genotype[i,70] = vcf_genotype[i,69];
vcf_genotype[(i+1),72] =  1}
if(i ==1) vcf_genotype[i,70] = vcf_genotype[i,69]
if((i > 1) && (vcf_genotype[i,66] == vcf_genotype[i-1,66])) vcf_genotype[i,70] = vcf_genotype[i,69] - vcf_genotype[i-1,69]
# if((i > 1) && (vcf_genotype[i,66] != vcf_genotype[i-1,66])) vcf_genotype[i,70] = vcf_genotype[i,69]
if(i ==1) vcf_genotype[i,71] = vcf_genotype[i,70]
if(i > 1) vcf_genotype[i,71] = vcf_genotype[i,70] + vcf_genotype[i-1,71]
i = 3
i = i + extra
#this is to add a row once you reach a new scaffold. Will help in the mapping
if((i > 1) && (vcf_genotype[i,66] != vcf_genotype[i-1,66])) {vcf_genotype = vcf_genotype[c(c(1:i),i,((i+1):nrow(vcf_genotype))),];
extra=extra+1;
vcf_genotype[i,70] = vcf_genotype[i,69];
vcf_genotype[(i+1),72] =  1}
if(i ==1) vcf_genotype[i,70] = vcf_genotype[i,69]
if((i > 1) && (vcf_genotype[i,66] == vcf_genotype[i-1,66])) vcf_genotype[i,70] = vcf_genotype[i,69] - vcf_genotype[i-1,69]
# if((i > 1) && (vcf_genotype[i,66] != vcf_genotype[i-1,66])) vcf_genotype[i,70] = vcf_genotype[i,69]
if(i ==1) vcf_genotype[i,71] = vcf_genotype[i,70]
if(i > 1) vcf_genotype[i,71] = vcf_genotype[i,70] + vcf_genotype[i-1,71]
i = 4
i = i + extra
#this is to add a row once you reach a new scaffold. Will help in the mapping
if((i > 1) && (vcf_genotype[i,66] != vcf_genotype[i-1,66])) {vcf_genotype = vcf_genotype[c(c(1:i),i,((i+1):nrow(vcf_genotype))),];
extra=extra+1;
vcf_genotype[i,70] = vcf_genotype[i,69];
vcf_genotype[(i+1),72] =  1}
if(i ==1) vcf_genotype[i,70] = vcf_genotype[i,69]
if((i > 1) && (vcf_genotype[i,66] == vcf_genotype[i-1,66])) vcf_genotype[i,70] = vcf_genotype[i,69] - vcf_genotype[i-1,69]
# if((i > 1) && (vcf_genotype[i,66] != vcf_genotype[i-1,66])) vcf_genotype[i,70] = vcf_genotype[i,69]
if(i ==1) vcf_genotype[i,71] = vcf_genotype[i,70]
if(i > 1) vcf_genotype[i,71] = vcf_genotype[i,70] + vcf_genotype[i-1,71]
head(vcf_genotype[,65:72])
extra
#get data into a genotype matrix
vcf_genotype = as.data.frame(vcf@gt[,-1],stringsAsFactors = F)
vcf_genotype$chrom = vcf@fix[,1]
vcf_genotype$ref = vcf@fix[,4]
vcf_genotype$alt = vcf@fix[,5]
vcf_genotype$pos = vcf@fix[,2]
#filter to remove homopolymers / microsats
vcf_genotype = vcf_genotype[nchar(vcf_genotype[,67])==1,]
#allleles and fractions
minor = data.frame(matrix(0,nrow = nrow(vcf_genotype), ncol=length(samples)))
major = data.frame(matrix(0,nrow = nrow(vcf_genotype), ncol=length(samples)))
fraction = data.frame(matrix(0,nrow = nrow(vcf_genotype), ncol=length(samples)))
for(j in 1:(ncol(vcf@gt)-1))
{
vcf_genotype[,j] = unlist(lapply(strsplit(vcf_genotype[,j],split = ":"), `[[`, 3))
temp_ref = as.numeric(unlist(lapply(strsplit(vcf_genotype[,j],split = ","), `[[`, 1)))
temp_alt = as.numeric(unlist(lapply(strsplit(vcf_genotype[,j],split = ","), `[[`, 2)))
major[,j] = temp_ref
minor[,j] = temp_alt
fraction[,j] = temp_ref / (temp_ref+temp_alt)
}
###continuous positioning on genome
vcf_genotype$pos = as.numeric(vcf_genotype$pos)
vcf_genotype$relative_pos = 0
vcf_genotype$conti_pos = 0
vcf_genotype$scaff = 0
extra = 0
i = 1
i = i + extra
if((i > 1) && (vcf_genotype[i,66] == vcf_genotype[i-1,66])) vcf_genotype[i,70] = vcf_genotype[i,69] - vcf_genotype[i-1,69]
#this is to add a row once you reach a new scaffold. Will help in the mapping
if((i > 1) && (vcf_genotype[i,66] != vcf_genotype[i-1,66])) {vcf_genotype = vcf_genotype[c(c(1:i),i,((i+1):nrow(vcf_genotype))),];
extra=extra+1;
vcf_genotype[i,70] = vcf_genotype[i,69];
vcf_genotype[(i+1),72] =  1}
if(i ==1) vcf_genotype[i,70] = vcf_genotype[i,69]
# if((i > 1) && (vcf_genotype[i,66] != vcf_genotype[i-1,66])) vcf_genotype[i,70] = vcf_genotype[i,69]
if(i ==1) vcf_genotype[i,71] = vcf_genotype[i,70]
if(i > 1) vcf_genotype[i,71] = vcf_genotype[i,70] + vcf_genotype[i-1,71]
i =2
i = i + extra
if((i > 1) && (vcf_genotype[i,66] == vcf_genotype[i-1,66])) vcf_genotype[i,70] = vcf_genotype[i,69] - vcf_genotype[i-1,69]
#this is to add a row once you reach a new scaffold. Will help in the mapping
if((i > 1) && (vcf_genotype[i,66] != vcf_genotype[i-1,66])) {vcf_genotype = vcf_genotype[c(c(1:i),i,((i+1):nrow(vcf_genotype))),];
extra=extra+1;
vcf_genotype[i,70] = vcf_genotype[i,69];
vcf_genotype[(i+1),72] =  1}
if(i ==1) vcf_genotype[i,70] = vcf_genotype[i,69]
# if((i > 1) && (vcf_genotype[i,66] != vcf_genotype[i-1,66])) vcf_genotype[i,70] = vcf_genotype[i,69]
if(i ==1) vcf_genotype[i,71] = vcf_genotype[i,70]
if(i > 1) vcf_genotype[i,71] = vcf_genotype[i,70] + vcf_genotype[i-1,71]
i = 3
i = i + extra
if((i > 1) && (vcf_genotype[i,66] == vcf_genotype[i-1,66])) vcf_genotype[i,70] = vcf_genotype[i,69] - vcf_genotype[i-1,69]
#this is to add a row once you reach a new scaffold. Will help in the mapping
if((i > 1) && (vcf_genotype[i,66] != vcf_genotype[i-1,66])) {vcf_genotype = vcf_genotype[c(c(1:i),i,((i+1):nrow(vcf_genotype))),];
extra=extra+1;
vcf_genotype[i,70] = vcf_genotype[i,69];
vcf_genotype[(i+1),72] =  1}
if(i ==1) vcf_genotype[i,70] = vcf_genotype[i,69]
# if((i > 1) && (vcf_genotype[i,66] != vcf_genotype[i-1,66])) vcf_genotype[i,70] = vcf_genotype[i,69]
if(i ==1) vcf_genotype[i,71] = vcf_genotype[i,70]
if(i > 1) vcf_genotype[i,71] = vcf_genotype[i,70] + vcf_genotype[i-1,71]
i=4
i = i + extra
if((i > 1) && (vcf_genotype[i,66] == vcf_genotype[i-1,66])) vcf_genotype[i,70] = vcf_genotype[i,69] - vcf_genotype[i-1,69]
#this is to add a row once you reach a new scaffold. Will help in the mapping
if((i > 1) && (vcf_genotype[i,66] != vcf_genotype[i-1,66])) {vcf_genotype = vcf_genotype[c(c(1:i),i,((i+1):nrow(vcf_genotype))),];
extra=extra+1;
vcf_genotype[i,70] = vcf_genotype[i,69];
vcf_genotype[(i+1),72] =  1}
if(i ==1) vcf_genotype[i,70] = vcf_genotype[i,69]
# if((i > 1) && (vcf_genotype[i,66] != vcf_genotype[i-1,66])) vcf_genotype[i,70] = vcf_genotype[i,69]
if(i ==1) vcf_genotype[i,71] = vcf_genotype[i,70]
if(i > 1) vcf_genotype[i,71] = vcf_genotype[i,70] + vcf_genotype[i-1,71]
vcf_genotype[1:5,66:72]
vcf_genotype[1:6,66:72]
i = 6
extra
i = 5
i = i + extra
if((i > 1) && (vcf_genotype[i,66] == vcf_genotype[i-1,66])) vcf_genotype[i,70] = vcf_genotype[i,69] - vcf_genotype[i-1,69]
#this is to add a row once you reach a new scaffold. Will help in the mapping
if((i > 1) && (vcf_genotype[i,66] != vcf_genotype[i-1,66])) {vcf_genotype = vcf_genotype[c(c(1:i),i,((i+1):nrow(vcf_genotype))),];
extra=extra+1;
vcf_genotype[i,70] = vcf_genotype[i,69];
vcf_genotype[(i+1),72] =  1}
if(i ==1) vcf_genotype[i,70] = vcf_genotype[i,69]
# if((i > 1) && (vcf_genotype[i,66] != vcf_genotype[i-1,66])) vcf_genotype[i,70] = vcf_genotype[i,69]
if(i ==1) vcf_genotype[i,71] = vcf_genotype[i,70]
if(i > 1) vcf_genotype[i,71] = vcf_genotype[i,70] + vcf_genotype[i-1,71]
i
vcf_genotype[1:7,66:72]
###continuous positioning on genome
vcf_genotype$pos = as.numeric(vcf_genotype$pos)
vcf_genotype$relative_pos = 0
vcf_genotype$conti_pos = 0
vcf_genotype$scaff = 0
vcf_genotype[1:7,66:72]
extra = 0
i = 1
i = i + extra
if((i > 1) && (vcf_genotype[i,66] == vcf_genotype[i-1,66])) vcf_genotype[i,70] = vcf_genotype[i,69] - vcf_genotype[i-1,69]
#this is to add a row once you reach a new scaffold. Will help in the mapping
if((i > 1) && (vcf_genotype[i,66] != vcf_genotype[i-1,66])) {vcf_genotype = vcf_genotype[c(c(1:i),i,((i+1):nrow(vcf_genotype))),];
extra=extra+1;
vcf_genotype[i,70] = vcf_genotype[i,69];
vcf_genotype[(i+1),72] =  1}
if(i ==1) vcf_genotype[i,70] = vcf_genotype[i,69]
# if((i > 1) && (vcf_genotype[i,66] != vcf_genotype[i-1,66])) vcf_genotype[i,70] = vcf_genotype[i,69]
if(i ==1) vcf_genotype[i,71] = vcf_genotype[i,70]
if(i > 1) vcf_genotype[i,71] = vcf_genotype[i,70] + vcf_genotype[i-1,71]
i =2
i = i + extra
if((i > 1) && (vcf_genotype[i,66] == vcf_genotype[i-1,66])) vcf_genotype[i,70] = vcf_genotype[i,69] - vcf_genotype[i-1,69]
#this is to add a row once you reach a new scaffold. Will help in the mapping
if((i > 1) && (vcf_genotype[i,66] != vcf_genotype[i-1,66])) {vcf_genotype = vcf_genotype[c(c(1:i),i,((i+1):nrow(vcf_genotype))),];
extra=extra+1;
vcf_genotype[i,70] = vcf_genotype[i,69];
vcf_genotype[(i+1),72] =  1}
if(i ==1) vcf_genotype[i,70] = vcf_genotype[i,69]
# if((i > 1) && (vcf_genotype[i,66] != vcf_genotype[i-1,66])) vcf_genotype[i,70] = vcf_genotype[i,69]
if(i ==1) vcf_genotype[i,71] = vcf_genotype[i,70]
if(i > 1) vcf_genotype[i,71] = vcf_genotype[i,70] + vcf_genotype[i-1,71]
i = 3
i = i + extra
if((i > 1) && (vcf_genotype[i,66] == vcf_genotype[i-1,66])) vcf_genotype[i,70] = vcf_genotype[i,69] - vcf_genotype[i-1,69]
#this is to add a row once you reach a new scaffold. Will help in the mapping
if((i > 1) && (vcf_genotype[i,66] != vcf_genotype[i-1,66])) {vcf_genotype = vcf_genotype[c(c(1:i),i,((i+1):nrow(vcf_genotype))),];
extra=extra+1;
vcf_genotype[i,70] = vcf_genotype[i,69];
vcf_genotype[(i+1),72] =  1}
if(i ==1) vcf_genotype[i,70] = vcf_genotype[i,69]
# if((i > 1) && (vcf_genotype[i,66] != vcf_genotype[i-1,66])) vcf_genotype[i,70] = vcf_genotype[i,69]
if(i ==1) vcf_genotype[i,71] = vcf_genotype[i,70]
if(i > 1) vcf_genotype[i,71] = vcf_genotype[i,70] + vcf_genotype[i-1,71]
vcf_genotype[1:7,66:72]
i = 4
i = i + extra
if((i > 1) && (vcf_genotype[i,66] == vcf_genotype[i-1,66])) print("go")
if((i > 1) && (vcf_genotype[i,66] != vcf_genotype[i-1,66])) print("f")
vcf_genotype = vcf_genotype[c(c(1:i),i,((i+1):nrow(vcf_genotype))),]
vcf_genotype[1:7,66:72]
i = 1
###continuous positioning on genome
vcf_genotype$pos = as.numeric(vcf_genotype$pos)
vcf_genotype$relative_pos = 0
vcf_genotype$conti_pos = 0
vcf_genotype$scaff = 0
extra = 0
i = 1
i = i + extra
if(i > 1) vcf_genotype[i,71] = vcf_genotype[i,70] + vcf_genotype[i-1,71]
if((i > 1) && (vcf_genotype[i,66] == vcf_genotype[i-1,66])) vcf_genotype[i,70] = vcf_genotype[i,69] - vcf_genotype[i-1,69]
#this is to add a row once you reach a new scaffold. Will help in the mapping
if((i > 1) && (vcf_genotype[i,66] != vcf_genotype[i-1,66])) {vcf_genotype = vcf_genotype[c(c(1:i),i,((i+1):nrow(vcf_genotype))),];
extra=extra+1;
vcf_genotype[i,70] = vcf_genotype[i,69];
vcf_genotype[(i+1),72] =  1}
if(i ==1) vcf_genotype[i,70] = vcf_genotype[i,69]
# if((i > 1) && (vcf_genotype[i,66] != vcf_genotype[i-1,66])) vcf_genotype[i,70] = vcf_genotype[i,69]
if(i ==1) vcf_genotype[i,71] = vcf_genotype[i,70]
if(i > 1) vcf_genotype[i,71] = vcf_genotype[i,70] + vcf_genotype[i-1,71]
i
i =2
i = i + extra
if(i > 1) vcf_genotype[i,71] = vcf_genotype[i,70] + vcf_genotype[i-1,71]
if((i > 1) && (vcf_genotype[i,66] == vcf_genotype[i-1,66])) vcf_genotype[i,70] = vcf_genotype[i,69] - vcf_genotype[i-1,69]
#this is to add a row once you reach a new scaffold. Will help in the mapping
if((i > 1) && (vcf_genotype[i,66] != vcf_genotype[i-1,66])) {vcf_genotype = vcf_genotype[c(c(1:i),i,((i+1):nrow(vcf_genotype))),];
extra=extra+1;
vcf_genotype[i,70] = vcf_genotype[i,69];
vcf_genotype[(i+1),72] =  1}
if(i ==1) vcf_genotype[i,70] = vcf_genotype[i,69]
# if((i > 1) && (vcf_genotype[i,66] != vcf_genotype[i-1,66])) vcf_genotype[i,70] = vcf_genotype[i,69]
if(i ==1) vcf_genotype[i,71] = vcf_genotype[i,70]
if(i > 1) vcf_genotype[i,71] = vcf_genotype[i,70] + vcf_genotype[i-1,71]
i =3
i = i + extra
if(i > 1) vcf_genotype[i,71] = vcf_genotype[i,70] + vcf_genotype[i-1,71]
if((i > 1) && (vcf_genotype[i,66] == vcf_genotype[i-1,66])) vcf_genotype[i,70] = vcf_genotype[i,69] - vcf_genotype[i-1,69]
#this is to add a row once you reach a new scaffold. Will help in the mapping
if((i > 1) && (vcf_genotype[i,66] != vcf_genotype[i-1,66])) {vcf_genotype = vcf_genotype[c(c(1:i),i,((i+1):nrow(vcf_genotype))),];
extra=extra+1;
vcf_genotype[i,70] = vcf_genotype[i,69];
vcf_genotype[(i+1),72] =  1}
if(i ==1) vcf_genotype[i,70] = vcf_genotype[i,69]
# if((i > 1) && (vcf_genotype[i,66] != vcf_genotype[i-1,66])) vcf_genotype[i,70] = vcf_genotype[i,69]
if(i ==1) vcf_genotype[i,71] = vcf_genotype[i,70]
if(i > 1) vcf_genotype[i,71] = vcf_genotype[i,70] + vcf_genotype[i-1,71]
i=4
vcf_genotype[i,71] = vcf_genotype[i,70] + vcf_genotype[i-1,71]
vcf_genotype[1:7,66:72]
#this is to add a row once you reach a new scaffold. Will help in the mapping
if((i > 1) && (vcf_genotype[i,66] != vcf_genotype[i-1,66])) {vcf_genotype = vcf_genotype[c(c(1:i),i,((i+1):nrow(vcf_genotype))),];
extra=extra+1;
vcf_genotype[i,70] = vcf_genotype[i,69];
vcf_genotype[(i+1),72] =  1}
vcf_genotype[1:7,66:72]
#simplify names of files
samples = unlist(lapply(strsplit(colnames(vcf@gt)[-1],split = "_"), `[[`, 5))
samples = paste(samples,unlist(lapply(strsplit(colnames(vcf@gt)[-1],split = "_"), `[[`, 6)),sep = "-")
samples = gsub("Champ","",samples)
samples = gsub("-WatPhotz-RNA","",samples)
colnames(vcf@gt)[-1] = samples
#get data into a genotype matrix
vcf_genotype = as.data.frame(vcf@gt[,-1],stringsAsFactors = F)
vcf_genotype$chrom = vcf@fix[,1]
vcf_genotype$ref = vcf@fix[,4]
vcf_genotype$alt = vcf@fix[,5]
vcf_genotype$pos = vcf@fix[,2]
#filter to remove homopolymers / microsats
vcf_genotype = vcf_genotype[nchar(vcf_genotype[,67])==1,]
#allleles and fractions
minor = data.frame(matrix(0,nrow = nrow(vcf_genotype), ncol=length(samples)))
major = data.frame(matrix(0,nrow = nrow(vcf_genotype), ncol=length(samples)))
fraction = data.frame(matrix(0,nrow = nrow(vcf_genotype), ncol=length(samples)))
for(j in 1:(ncol(vcf@gt)-1))
{
vcf_genotype[,j] = unlist(lapply(strsplit(vcf_genotype[,j],split = ":"), `[[`, 3))
temp_ref = as.numeric(unlist(lapply(strsplit(vcf_genotype[,j],split = ","), `[[`, 1)))
temp_alt = as.numeric(unlist(lapply(strsplit(vcf_genotype[,j],split = ","), `[[`, 2)))
major[,j] = temp_ref
minor[,j] = temp_alt
fraction[,j] = temp_ref / (temp_ref+temp_alt)
}
###continuous positioning on genome
vcf_genotype$pos = as.numeric(vcf_genotype$pos)
vcf_genotype$relative_pos = 0
vcf_genotype$conti_pos = 0
vcf_genotype$scaff = 0
extra = 0
for(i in 1:nrow(vcf_genotype))
{
i = i + extra
if(i > 1) vcf_genotype[i,71] = vcf_genotype[i,70] + vcf_genotype[i-1,71]
if((i > 1) && (vcf_genotype[i,66] == vcf_genotype[i-1,66])) vcf_genotype[i,70] = vcf_genotype[i,69] - vcf_genotype[i-1,69]
#this is to add a row once you reach a new scaffold. Will help in the mapping
if((i > 1) && (vcf_genotype[i,66] != vcf_genotype[i-1,66])) {vcf_genotype = vcf_genotype[c(c(1:i),i,((i+1):nrow(vcf_genotype))),];
extra=extra+1;
vcf_genotype[i,70] = vcf_genotype[i,69];
vcf_genotype[(i+1),72] =  1}
if(i ==1) vcf_genotype[i,70] = vcf_genotype[i,69]
# if((i > 1) && (vcf_genotype[i,66] != vcf_genotype[i-1,66])) vcf_genotype[i,70] = vcf_genotype[i,69]
if(i ==1) vcf_genotype[i,71] = vcf_genotype[i,70]
if(i%%10000==0) print(paste("Done: ",i," of ",nrow(vcf_genotype), ", The time is:",Sys.time(),sep = ""))
}
rm(list = ls())
#setwd and packages and modified nls_err function
setwd("/Users/jerry/Documents/CSBQ/shapiro")
source("Rcode/factory.R")
library(vcfR)
library(qvalue)
library(lubridate)
library(ggplot2)
library(gridExtra)
library(RColorBrewer)
#load vcf and reference
vcf <- read.vcfR("results/dolicho/dolicho_genome.vcf")
dna <- ape::read.dna("results/dolicho/Dolicho_genome.fasta", format = "fasta")
#simplify names of files
samples = unlist(lapply(strsplit(colnames(vcf@gt)[-1],split = "_"), `[[`, 5))
samples = paste(samples,unlist(lapply(strsplit(colnames(vcf@gt)[-1],split = "_"), `[[`, 6)),sep = "-")
samples = gsub("Champ","",samples)
samples = gsub("-WatPhotz-RNA","",samples)
colnames(vcf@gt)[-1] = samples
#get data into a genotype matrix
vcf_genotype = as.data.frame(vcf@gt[,-1],stringsAsFactors = F)
vcf_genotype$chrom = vcf@fix[,1]
vcf_genotype$ref = vcf@fix[,4]
vcf_genotype$alt = vcf@fix[,5]
vcf_genotype$pos = vcf@fix[,2]
#filter to remove homopolymers / microsats
vcf_genotype = vcf_genotype[nchar(vcf_genotype[,67])==1,]
#allleles and fractions
minor = data.frame(matrix(0,nrow = nrow(vcf_genotype), ncol=length(samples)))
major = data.frame(matrix(0,nrow = nrow(vcf_genotype), ncol=length(samples)))
fraction = data.frame(matrix(0,nrow = nrow(vcf_genotype), ncol=length(samples)))
for(j in 1:(ncol(vcf@gt)-1))
{
vcf_genotype[,j] = unlist(lapply(strsplit(vcf_genotype[,j],split = ":"), `[[`, 3))
temp_ref = as.numeric(unlist(lapply(strsplit(vcf_genotype[,j],split = ","), `[[`, 1)))
temp_alt = as.numeric(unlist(lapply(strsplit(vcf_genotype[,j],split = ","), `[[`, 2)))
major[,j] = temp_ref
minor[,j] = temp_alt
fraction[,j] = temp_ref / (temp_ref+temp_alt)
}
###continuous positioning on genome
vcf_genotype$pos = as.numeric(vcf_genotype$pos)
vcf_genotype$relative_pos = 0
vcf_genotype$conti_pos = 0
vcf_genotype$scaff = 0
extra = 0
for(i in 1:nrow(vcf_genotype))
{
i = i + extra
if(i > 1) vcf_genotype[i,71] = vcf_genotype[i,70] + vcf_genotype[i-1,71]
if((i > 1) && (vcf_genotype[i,66] == vcf_genotype[i-1,66])) vcf_genotype[i,70] = vcf_genotype[i,69] - vcf_genotype[i-1,69]
#this is to add a row once you reach a new scaffold. Will help in the mapping
if((i > 1) && (vcf_genotype[i,66] != vcf_genotype[i-1,66])) {vcf_genotype = vcf_genotype[c(c(1:i),i,((i+1):nrow(vcf_genotype))),];
extra=extra+1;
vcf_genotype[i,70] = vcf_genotype[i,69];
vcf_genotype[(i+1),72] =  1}
if(i ==1) vcf_genotype[i,70] = vcf_genotype[i,69]
# if((i > 1) && (vcf_genotype[i,66] != vcf_genotype[i-1,66])) vcf_genotype[i,70] = vcf_genotype[i,69]
if(i ==1) vcf_genotype[i,71] = vcf_genotype[i,70]
if(i%%10000==0) print(paste("Done: ",i," of ",nrow(vcf_genotype), ", The time is:",Sys.time(),sep = ""))
}
