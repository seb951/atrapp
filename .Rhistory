locations
length(x)
dim(x)
x
#these are percentage values
all_spp_m_ggplot[,1] = all_spp_m_ggplot[,1]/100
#plot
x = colorRampPalette(brewer.pal(12,"Paired"))
p1=ggplot() + labs(title = "Lake Champlain - all annotated species",fill = "Taxonomy") +
theme_bw() +
theme(plot.title = element_text(hjust = 0.5, size=14, face="bold")) + scale_fill_manual(values = x(nrow(refseq.all.top1))) +
geom_bar(aes(y = fraction, x = samples, fill = species),
data = all_spp_m_ggplot,stat="identity") + ylab("fraction of annotated species")  + theme(axis.text.x = element_text(angle = 90, hjust = 1))
#all three (dimensions in inches)
dev.new(width=10, height=7,noRStudioGD = TRUE)
#pdf('figures/Champlain_barplot.pdf',width=14, height=15)
p1 + facet_grid(rows=vars(locations_f))
dev.print(device=pdf,paste("figures/Champlain_functions_barplot_level",level,".pdf",sep =""), onefile=FALSE)
dev.off()
head(all_spp_m_ggplot)
str(all_spp_m_ggplot)
x(nrow(refseq.all.top1))
all_spp_m_ggplot[,5] = factor(all_spp_m_ggplot$locations, levels=c('St1','St2','PRM'))
colnames(all_spp_m_ggplot) = c("fraction","species","samples","locations","locations_f")
str(all_spp_m_ggplot)
#these are percentage values
all_spp_m_ggplot[,1] = all_spp_m_ggplot[,1]/100
#plot
x = colorRampPalette(brewer.pal(12,"Paired"))
p1=ggplot() + labs(title = "Lake Champlain - all annotated species",fill = "Taxonomy") +
theme_bw() +
theme(plot.title = element_text(hjust = 0.5, size=14, face="bold")) + scale_fill_manual(values = x(nrow(refseq.all.top1))) +
geom_bar(aes(y = fraction, x = samples, fill = species),
data = all_spp_m_ggplot,stat="identity") + ylab("fraction of annotated species")  + theme(axis.text.x = element_text(angle = 90, hjust = 1))
#all three (dimensions in inches)
dev.new(width=10, height=7,noRStudioGD = TRUE)
#pdf('figures/Champlain_barplot.pdf',width=14, height=15)
p1 + facet_grid(rows=vars(locations_f))
dev.print(device=pdf,paste("figures/Champlain_functions_barplot_level",level,".pdf",sep =""), onefile=FALSE)
dev.off()
X=1
refseq.all.order = refseq.all.uniques[order(rowMeans(refseq.all.uniques[,-1]),decreasing=T),]
refseq.all.top1 = refseq.all.uniques[rowMeans(refseq.all.uniques[,-1])>X,]
dim(refseq.all.top1)
#ggplot object
all_spp_m_ggplot = data.frame(unlist(refseq.all.top1[,2:66]))
temp = all_spp_m_ggplot
all_spp_m_ggplot[,2] = rep(refseq.all.top1[,1],65)
all_spp_m_ggplot[,3] = as.vector(t(matrix(rep(samples,nrow(refseq.all.top1)),nrow=length(samples),ncol=nrow(refseq.all.top1))))
all_spp_m_ggplot[,4] = as.vector(t(matrix(rep(locations,nrow(refseq.all.top1)),nrow=length(locations),ncol=nrow(refseq.all.top1))))
all_spp_m_ggplot[,5] = factor(all_spp_m_ggplot$locations, levels=c('St1','St2','PRM'))
colnames(all_spp_m_ggplot) = c("fraction","species","samples","locations","locations_f")
#these are percentage values
all_spp_m_ggplot[,1] = all_spp_m_ggplot[,1]/100
#plot
x = colorRampPalette(brewer.pal(12,"Paired"))
p1=ggplot() + labs(title = "Lake Champlain - all annotated species",fill = "Taxonomy") +
theme_bw() +
theme(plot.title = element_text(hjust = 0.5, size=14, face="bold")) + scale_fill_manual(values = x(nrow(refseq.all.top1))) +
geom_bar(aes(y = fraction, x = samples, fill = species),
data = all_spp_m_ggplot,stat="identity") + ylab("fraction of annotated species")  + theme(axis.text.x = element_text(angle = 90, hjust = 1))
#all three (dimensions in inches)
dev.new(width=10, height=7,noRStudioGD = TRUE)
#pdf('figures/Champlain_barplot.pdf',width=14, height=15)
p1 + facet_grid(rows=vars(locations_f))
dev.print(device=pdf,paste("figures/Champlain_functions_barplot_level",level,".pdf",sep =""), onefile=FALSE)
dev.off()
str(all_spp_m_ggplot)
#ggplot object
all_spp_m_ggplot = data.frame(unlist(refseq.all.top1[,2:66]))
temp = all_spp_m_ggplot
all_spp_m_ggplot[,2] = rep(refseq.all.top1[,1],65)
all_spp_m_ggplot[,3] = as.vector(t(matrix(rep(samples,nrow(refseq.all.top1)),nrow=length(samples),ncol=nrow(refseq.all.top1))))
all_spp_m_ggplot[,4] = as.vector(t(matrix(rep(locations,nrow(refseq.all.top1)),nrow=length(locations),ncol=nrow(refseq.all.top1))))
all_spp_m_ggplot[,5] = factor(all_spp_m_ggplot$locations, levels=c('St1','St2','PRM'))
str(all_spp_m_ggplot)
all_spp_m_ggplot[,5] = factor(all_spp_m_ggplot$locations, levels=c('St1','St2','PRM'))
str(all_spp_m_ggplot)
colnames(all_spp_m_ggplot) = c("fraction","species","samples","locations","locations_f")
str(all_spp_m_ggplot)
all_spp_m_ggplot[,5] = factor(all_spp_m_ggplot$locations, levels=c('St1','St2','PRM'))
str(all_spp_m_ggplot)
#ggplot object
all_spp_m_ggplot = data.frame(unlist(refseq.all.top1[,2:66]))
temp = all_spp_m_ggplot
all_spp_m_ggplot[,2] = rep(refseq.all.top1[,1],65)
all_spp_m_ggplot[,3] = as.vector(t(matrix(rep(samples,nrow(refseq.all.top1)),nrow=length(samples),ncol=nrow(refseq.all.top1))))
all_spp_m_ggplot[,4] = as.vector(t(matrix(rep(locations,nrow(refseq.all.top1)),nrow=length(locations),ncol=nrow(refseq.all.top1))))
all_spp_m_ggplot[,5] = 0
colnames(all_spp_m_ggplot) = c("fraction","species","samples","locations","locations_f")
all_spp_m_ggplot[,5] = factor(all_spp_m_ggplot$locations, levels=c('St1','St2','PRM'))
str(all_spp_m_ggplot)
#these are percentage values
all_spp_m_ggplot[,1] = all_spp_m_ggplot[,1]/100
#plot
x = colorRampPalette(brewer.pal(12,"Paired"))
p1=ggplot() + labs(title = "Lake Champlain - all annotated species",fill = "Taxonomy") +
theme_bw() +
theme(plot.title = element_text(hjust = 0.5, size=14, face="bold")) + scale_fill_manual(values = x(nrow(refseq.all.top1))) +
geom_bar(aes(y = fraction, x = samples, fill = species),
data = all_spp_m_ggplot,stat="identity") + ylab("fraction of annotated species")  + theme(axis.text.x = element_text(angle = 90, hjust = 1))
#all three (dimensions in inches)
dev.new(width=10, height=7,noRStudioGD = TRUE)
#pdf('figures/Champlain_barplot.pdf',width=14, height=15)
p1 + facet_grid(rows=vars(locations_f))
dev.print(device=pdf,paste("figures/Champlain_functions_barplot_level",level,".pdf",sep =""), onefile=FALSE)
dev.off()
head(all_spp_m_ggplot)
level = 4 #choose levels 1,2,3,4
samples = NULL
locations = NULL
all_spp = NULL
refseq.all.list = as.list(1)
for(i in 1:nrow(all.tsv))
{
refseq.all = read.table(paste(all.tsv[i,1],"_modif",sep = ""),header = T,stringsAsFactors = F)
refseq.all.list[[i]] = refseq.all
#get a proper shortname for the graph
replicate = substring(strsplit(all.tsv[i,1],split = "WatPhotz_")[[1]][2],4,4)
location = substring(strsplit(all.tsv[i,1],split = "Champ")[[1]][2],1,3)
date = strsplit(all.tsv[i,1],split = "-")[[1]][2]
samples = c(samples,paste(date,replicate,sep = "_"))
locations = c(locations,location)
all_spp = c(all_spp,refseq.all[,level+2])
}
#unique.
all_spp_m = unique(sort(all_spp))
#level 4 uniques
refseq.all.uniques = data.frame(all_spp_m,stringsAsFactors = F)
for(j in 1:65)
{
for(i in 1:length(all_spp_one_m))
{
temp = refseq.all.list[[j]][refseq.all.list[[j]][,level+2] == all_spp_m[i],]
#summing the percentages per categories for all categories...
refseq.all.uniques[i,j+1] = sum(temp[,1])
}
}
colnames(refseq.all.uniques)[-1] = samples
#top X percent of functions
X=1
refseq.all.order = refseq.all.uniques[order(rowMeans(refseq.all.uniques[,-1]),decreasing=T),]
refseq.all.top1 = refseq.all.uniques[rowMeans(refseq.all.uniques[,-1])>X,]
dim(refseq.all.top1)
#ggplot object
all_spp_m_ggplot = data.frame(unlist(refseq.all.top1[,2:66]))
temp = all_spp_m_ggplot
all_spp_m_ggplot[,2] = rep(refseq.all.top1[,1],65)
all_spp_m_ggplot[,3] = as.vector(t(matrix(rep(samples,nrow(refseq.all.top1)),nrow=length(samples),ncol=nrow(refseq.all.top1))))
all_spp_m_ggplot[,4] = as.vector(t(matrix(rep(locations,nrow(refseq.all.top1)),nrow=length(locations),ncol=nrow(refseq.all.top1))))
all_spp_m_ggplot[,5] = 0
colnames(all_spp_m_ggplot) = c("fraction","species","samples","locations","locations_f")
all_spp_m_ggplot[,5] = factor(all_spp_m_ggplot$locations, levels=c('St1','St2','PRM'))
#these are percentage values
all_spp_m_ggplot[,1] = all_spp_m_ggplot[,1]/100
#plot
x = colorRampPalette(brewer.pal(12,"Paired"))
p1=ggplot() + labs(title = "Lake Champlain - all annotated species",fill = "Taxonomy") +
theme_bw() +
theme(plot.title = element_text(hjust = 0.5, size=14, face="bold")) + scale_fill_manual(values = x(nrow(refseq.all.top1))) +
geom_bar(aes(y = fraction, x = samples, fill = species),
data = all_spp_m_ggplot,stat="identity") + ylab("fraction of annotated species")  + theme(axis.text.x = element_text(angle = 90, hjust = 1))
#all three (dimensions in inches)
dev.new(width=10, height=7,noRStudioGD = TRUE)
#pdf('figures/Champlain_barplot.pdf',width=14, height=15)
p1 + facet_grid(rows=vars(locations_f))
dev.print(device=pdf,paste("figures/Champlain_functions_barplot_level",level,".pdf",sep =""), onefile=FALSE)
dev.off()
rm(list = ls())
setwd("/Users/jerry/Dropbox/CSBQ/shapiro")
#packages
library(ggplot2)
library(gridExtra)
library(RColorBrewer)
#######################################
###hierachical level info -----
###get all the data
#######################################
level = 4 #choose levels 1,2,3,4
samples = NULL
locations = NULL
all_spp = NULL
refseq.all.list = as.list(1)
for(i in 1:nrow(all.tsv))
{
refseq.all = read.table(paste(all.tsv[i,1],"_modif",sep = ""),header = T,stringsAsFactors = F)
refseq.all.list[[i]] = refseq.all
#get a proper shortname for the graph
replicate = substring(strsplit(all.tsv[i,1],split = "WatPhotz_")[[1]][2],4,4)
location = substring(strsplit(all.tsv[i,1],split = "Champ")[[1]][2],1,3)
date = strsplit(all.tsv[i,1],split = "-")[[1]][2]
samples = c(samples,paste(date,replicate,sep = "_"))
locations = c(locations,location)
all_spp = c(all_spp,refseq.all[,level+2])
}
#unique.
all_spp_m = unique(sort(all_spp))
#level 4 uniques
refseq.all.uniques = data.frame(all_spp_m,stringsAsFactors = F)
for(j in 1:65)
{
for(i in 1:length(all_spp_one_m))
{
temp = refseq.all.list[[j]][refseq.all.list[[j]][,level+2] == all_spp_m[i],]
#summing the percentages per categories for all categories...
refseq.all.uniques[i,j+1] = sum(temp[,1])
}
}
colnames(refseq.all.uniques)[-1] = samples
#top X percent of functions
X=1
refseq.all.order = refseq.all.uniques[order(rowMeans(refseq.all.uniques[,-1]),decreasing=T),]
refseq.all.top1 = refseq.all.uniques[rowMeans(refseq.all.uniques[,-1])>X,]
dim(refseq.all.top1)
rm(list =ls())
#packages
library(ggplot2)
library(gridExtra)
library(RColorBrewer)
level = 4 #choose levels 1,2,3,4
samples = NULL
locations = NULL
all_spp = NULL
refseq.all.list = as.list(1)
for(i in 1:nrow(all.tsv))
{
refseq.all = read.table(paste(all.tsv[i,1],"_modif",sep = ""),header = T,stringsAsFactors = F)
refseq.all.list[[i]] = refseq.all
#get a proper shortname for the graph
replicate = substring(strsplit(all.tsv[i,1],split = "WatPhotz_")[[1]][2],4,4)
location = substring(strsplit(all.tsv[i,1],split = "Champ")[[1]][2],1,3)
date = strsplit(all.tsv[i,1],split = "-")[[1]][2]
samples = c(samples,paste(date,replicate,sep = "_"))
locations = c(locations,location)
all_spp = c(all_spp,refseq.all[,level+2])
}
#unique.
all_spp_m = unique(sort(all_spp))
#level 4 uniques
refseq.all.uniques = data.frame(all_spp_m,stringsAsFactors = F)
for(j in 1:65)
{
for(i in 1:length(all_spp_m))
{
temp = refseq.all.list[[j]][refseq.all.list[[j]][,level+2] == all_spp_m[i],]
#summing the percentages per categories for all categories...
refseq.all.uniques[i,j+1] = sum(temp[,1])
}
}
colnames(refseq.all.uniques)[-1] = samples
#top X percent of functions
X=1
refseq.all.order = refseq.all.uniques[order(rowMeans(refseq.all.uniques[,-1]),decreasing=T),]
refseq.all.top1 = refseq.all.uniques[rowMeans(refseq.all.uniques[,-1])>X,]
dim(refseq.all.top1)
#ggplot object
all_spp_m_ggplot = data.frame(unlist(refseq.all.top1[,2:66]))
temp = all_spp_m_ggplot
all_spp_m_ggplot[,2] = rep(refseq.all.top1[,1],65)
all_spp_m_ggplot[,3] = as.vector(t(matrix(rep(samples,nrow(refseq.all.top1)),nrow=length(samples),ncol=nrow(refseq.all.top1))))
all_spp_m_ggplot[,4] = as.vector(t(matrix(rep(locations,nrow(refseq.all.top1)),nrow=length(locations),ncol=nrow(refseq.all.top1))))
all_spp_m_ggplot[,5] = 0
colnames(all_spp_m_ggplot) = c("fraction","species","samples","locations","locations_f")
all_spp_m_ggplot[,5] = factor(all_spp_m_ggplot$locations, levels=c('St1','St2','PRM'))
#these are percentage values
all_spp_m_ggplot[,1] = all_spp_m_ggplot[,1]/100
#plot
x = colorRampPalette(brewer.pal(12,"Paired"))
p1=ggplot() + labs(title = "Lake Champlain - all annotated species",fill = "Taxonomy") +
theme_bw() +
theme(plot.title = element_text(hjust = 0.5, size=14, face="bold")) + scale_fill_manual(values = x(nrow(refseq.all.top1))) +
geom_bar(aes(y = fraction, x = samples, fill = species),
data = all_spp_m_ggplot,stat="identity") + ylab("fraction of annotated species")  + theme(axis.text.x = element_text(angle = 90, hjust = 1))
#all three (dimensions in inches)
dev.new(width=10, height=7,noRStudioGD = TRUE)
#pdf('figures/Champlain_barplot.pdf',width=14, height=15)
p1 + facet_grid(rows=vars(locations_f))
dev.print(device=pdf,paste("figures/Champlain_functions_barplot_level",level,".pdf",sep =""), onefile=FALSE)
dev.off()
rm(list =ls())
all.tsv = read.table("all.tsv", stringsAsFactors = F)
#packages
library(ggplot2)
library(gridExtra)
library(RColorBrewer)
level = 4 #choose levels 1,2,3,4
samples = NULL
locations = NULL
all_spp = NULL
refseq.all.list = as.list(1)
for(i in 1:nrow(all.tsv))
{
refseq.all = read.table(paste(all.tsv[i,1],"_modif",sep = ""),header = T,stringsAsFactors = F)
refseq.all.list[[i]] = refseq.all
#get a proper shortname for the graph
replicate = substring(strsplit(all.tsv[i,1],split = "WatPhotz_")[[1]][2],4,4)
location = substring(strsplit(all.tsv[i,1],split = "Champ")[[1]][2],1,3)
date = strsplit(all.tsv[i,1],split = "-")[[1]][2]
samples = c(samples,paste(date,replicate,sep = "_"))
locations = c(locations,location)
all_spp = c(all_spp,refseq.all[,level+2])
}
#unique.
all_spp_m = unique(sort(all_spp))
#level 4 uniques
refseq.all.uniques = data.frame(all_spp_m,stringsAsFactors = F)
for(j in 1:65)
{
for(i in 1:length(all_spp_m))
{
temp = refseq.all.list[[j]][refseq.all.list[[j]][,level+2] == all_spp_m[i],]
#summing the percentages per categories for all categories...
refseq.all.uniques[i,j+1] = sum(temp[,1])
}
}
colnames(refseq.all.uniques)[-1] = samples
#top X percent of functions
X=1
refseq.all.order = refseq.all.uniques[order(rowMeans(refseq.all.uniques[,-1]),decreasing=T),]
refseq.all.top1 = refseq.all.uniques[rowMeans(refseq.all.uniques[,-1])>X,]
dim(refseq.all.top1)
#ggplot object
all_spp_m_ggplot = data.frame(unlist(refseq.all.top1[,2:66]))
temp = all_spp_m_ggplot
all_spp_m_ggplot[,2] = rep(refseq.all.top1[,1],65)
all_spp_m_ggplot[,3] = as.vector(t(matrix(rep(samples,nrow(refseq.all.top1)),nrow=length(samples),ncol=nrow(refseq.all.top1))))
all_spp_m_ggplot[,4] = as.vector(t(matrix(rep(locations,nrow(refseq.all.top1)),nrow=length(locations),ncol=nrow(refseq.all.top1))))
all_spp_m_ggplot[,5] = 0
colnames(all_spp_m_ggplot) = c("fraction","species","samples","locations","locations_f")
all_spp_m_ggplot[,5] = factor(all_spp_m_ggplot$locations, levels=c('St1','St2','PRM'))
#these are percentage values
all_spp_m_ggplot[,1] = all_spp_m_ggplot[,1]/100
#plot
x = colorRampPalette(brewer.pal(12,"Paired"))
p1=ggplot() + labs(title = "Lake Champlain - all annotated species",fill = "Taxonomy") +
theme_bw() +
theme(plot.title = element_text(hjust = 0.5, size=14, face="bold")) + scale_fill_manual(values = x(nrow(refseq.all.top1))) +
geom_bar(aes(y = fraction, x = samples, fill = species),
data = all_spp_m_ggplot,stat="identity") + ylab("fraction of annotated species")  + theme(axis.text.x = element_text(angle = 90, hjust = 1))
#all three (dimensions in inches)
dev.new(width=10, height=7,noRStudioGD = TRUE)
#pdf('figures/Champlain_barplot.pdf',width=14, height=15)
p1 + facet_grid(rows=vars(locations_f))
dev.print(device=pdf,paste("figures/Champlain_functions_barplot_level",level,".pdf",sep =""), onefile=FALSE)
dev.off()
all.tsv = read.table("all.tsv", stringsAsFactors = F)
#packages
library(ggplot2)
library(gridExtra)
library(RColorBrewer)
level = 2 #choose levels 1,2,3,4
samples = NULL
locations = NULL
all_spp = NULL
refseq.all.list = as.list(1)
for(i in 1:nrow(all.tsv))
{
refseq.all = read.table(paste(all.tsv[i,1],"_modif",sep = ""),header = T,stringsAsFactors = F)
refseq.all.list[[i]] = refseq.all
#get a proper shortname for the graph
replicate = substring(strsplit(all.tsv[i,1],split = "WatPhotz_")[[1]][2],4,4)
location = substring(strsplit(all.tsv[i,1],split = "Champ")[[1]][2],1,3)
date = strsplit(all.tsv[i,1],split = "-")[[1]][2]
samples = c(samples,paste(date,replicate,sep = "_"))
locations = c(locations,location)
all_spp = c(all_spp,refseq.all[,level+2])
}
#unique.
all_spp_m = unique(sort(all_spp))
#level 4 uniques
refseq.all.uniques = data.frame(all_spp_m,stringsAsFactors = F)
for(j in 1:65)
{
for(i in 1:length(all_spp_m))
{
temp = refseq.all.list[[j]][refseq.all.list[[j]][,level+2] == all_spp_m[i],]
#summing the percentages per categories for all categories...
refseq.all.uniques[i,j+1] = sum(temp[,1])
}
}
colnames(refseq.all.uniques)[-1] = samples
#top X percent of functions
X=1
refseq.all.order = refseq.all.uniques[order(rowMeans(refseq.all.uniques[,-1]),decreasing=T),]
refseq.all.top1 = refseq.all.uniques[rowMeans(refseq.all.uniques[,-1])>X,]
dim(refseq.all.top1)
#ggplot object
all_spp_m_ggplot = data.frame(unlist(refseq.all.top1[,2:66]))
temp = all_spp_m_ggplot
all_spp_m_ggplot[,2] = rep(refseq.all.top1[,1],65)
all_spp_m_ggplot[,3] = as.vector(t(matrix(rep(samples,nrow(refseq.all.top1)),nrow=length(samples),ncol=nrow(refseq.all.top1))))
all_spp_m_ggplot[,4] = as.vector(t(matrix(rep(locations,nrow(refseq.all.top1)),nrow=length(locations),ncol=nrow(refseq.all.top1))))
all_spp_m_ggplot[,5] = 0
colnames(all_spp_m_ggplot) = c("fraction","species","samples","locations","locations_f")
all_spp_m_ggplot[,5] = factor(all_spp_m_ggplot$locations, levels=c('St1','St2','PRM'))
#these are percentage values
all_spp_m_ggplot[,1] = all_spp_m_ggplot[,1]/100
#plot
x = colorRampPalette(brewer.pal(12,"Paired"))
p1=ggplot() + labs(title = "Lake Champlain - all annotated species",fill = "Taxonomy") +
theme_bw() +
theme(plot.title = element_text(hjust = 0.5, size=14, face="bold")) + scale_fill_manual(values = x(nrow(refseq.all.top1))) +
geom_bar(aes(y = fraction, x = samples, fill = species),
data = all_spp_m_ggplot,stat="identity") + ylab("fraction of annotated species")  + theme(axis.text.x = element_text(angle = 90, hjust = 1))
#all three (dimensions in inches)
dev.new(width=10, height=7,noRStudioGD = TRUE)
#pdf('figures/Champlain_barplot.pdf',width=14, height=15)
p1 + facet_grid(rows=vars(locations_f))
dev.print(device=pdf,paste("figures/Champlain_functions_barplot_level",level,".pdf",sep =""), onefile=FALSE)
dev.off()
all.tsv = read.table("all.tsv", stringsAsFactors = F)
#packages
library(ggplot2)
library(gridExtra)
library(RColorBrewer)
level = 1 #choose levels 1,2,3,4
samples = NULL
locations = NULL
all_spp = NULL
refseq.all.list = as.list(1)
for(i in 1:nrow(all.tsv))
{
refseq.all = read.table(paste(all.tsv[i,1],"_modif",sep = ""),header = T,stringsAsFactors = F)
refseq.all.list[[i]] = refseq.all
#get a proper shortname for the graph
replicate = substring(strsplit(all.tsv[i,1],split = "WatPhotz_")[[1]][2],4,4)
location = substring(strsplit(all.tsv[i,1],split = "Champ")[[1]][2],1,3)
date = strsplit(all.tsv[i,1],split = "-")[[1]][2]
samples = c(samples,paste(date,replicate,sep = "_"))
locations = c(locations,location)
all_spp = c(all_spp,refseq.all[,level+2])
}
#unique.
all_spp_m = unique(sort(all_spp))
#level 4 uniques
refseq.all.uniques = data.frame(all_spp_m,stringsAsFactors = F)
for(j in 1:65)
{
for(i in 1:length(all_spp_m))
{
temp = refseq.all.list[[j]][refseq.all.list[[j]][,level+2] == all_spp_m[i],]
#summing the percentages per categories for all categories...
refseq.all.uniques[i,j+1] = sum(temp[,1])
}
}
colnames(refseq.all.uniques)[-1] = samples
#top X percent of functions
X=1
refseq.all.order = refseq.all.uniques[order(rowMeans(refseq.all.uniques[,-1]),decreasing=T),]
refseq.all.top1 = refseq.all.uniques[rowMeans(refseq.all.uniques[,-1])>X,]
dim(refseq.all.top1)
#ggplot object
all_spp_m_ggplot = data.frame(unlist(refseq.all.top1[,2:66]))
temp = all_spp_m_ggplot
all_spp_m_ggplot[,2] = rep(refseq.all.top1[,1],65)
all_spp_m_ggplot[,3] = as.vector(t(matrix(rep(samples,nrow(refseq.all.top1)),nrow=length(samples),ncol=nrow(refseq.all.top1))))
all_spp_m_ggplot[,4] = as.vector(t(matrix(rep(locations,nrow(refseq.all.top1)),nrow=length(locations),ncol=nrow(refseq.all.top1))))
all_spp_m_ggplot[,5] = 0
colnames(all_spp_m_ggplot) = c("fraction","species","samples","locations","locations_f")
all_spp_m_ggplot[,5] = factor(all_spp_m_ggplot$locations, levels=c('St1','St2','PRM'))
#these are percentage values
all_spp_m_ggplot[,1] = all_spp_m_ggplot[,1]/100
#plot
x = colorRampPalette(brewer.pal(12,"Paired"))
p1=ggplot() + labs(title = "Lake Champlain - all annotated species",fill = "Taxonomy") +
theme_bw() +
theme(plot.title = element_text(hjust = 0.5, size=14, face="bold")) + scale_fill_manual(values = x(nrow(refseq.all.top1))) +
geom_bar(aes(y = fraction, x = samples, fill = species),
data = all_spp_m_ggplot,stat="identity") + ylab("fraction of annotated species")  + theme(axis.text.x = element_text(angle = 90, hjust = 1))
#all three (dimensions in inches)
dev.new(width=10, height=7,noRStudioGD = TRUE)
#pdf('figures/Champlain_barplot.pdf',width=14, height=15)
p1 + facet_grid(rows=vars(locations_f))
dev.print(device=pdf,paste("figures/Champlain_functions_barplot_level",level,".pdf",sep =""), onefile=FALSE)
dev.off()
#top X percent of functions
X=0.1
refseq.all.order = refseq.all.uniques[order(rowMeans(refseq.all.uniques[,-1]),decreasing=T),]
refseq.all.top1 = refseq.all.uniques[rowMeans(refseq.all.uniques[,-1])>X,]
dim(refseq.all.top1)
X=0.1
refseq.all.order = refseq.all.uniques[order(rowMeans(refseq.all.uniques[,-1]),decreasing=T),]
refseq.all.top1 = refseq.all.uniques[rowMeans(refseq.all.uniques[,-1])>0.5,]
dim(refseq.all.top1)
X=0.5
refseq.all.order = refseq.all.uniques[order(rowMeans(refseq.all.uniques[,-1]),decreasing=T),]
refseq.all.top1 = refseq.all.uniques[rowMeans(refseq.all.uniques[,-1])>X,]
dim(refseq.all.top1)
#ggplot object
all_spp_m_ggplot = data.frame(unlist(refseq.all.top1[,2:66]))
temp = all_spp_m_ggplot
all_spp_m_ggplot[,2] = rep(refseq.all.top1[,1],65)
all_spp_m_ggplot[,3] = as.vector(t(matrix(rep(samples,nrow(refseq.all.top1)),nrow=length(samples),ncol=nrow(refseq.all.top1))))
all_spp_m_ggplot[,4] = as.vector(t(matrix(rep(locations,nrow(refseq.all.top1)),nrow=length(locations),ncol=nrow(refseq.all.top1))))
all_spp_m_ggplot[,5] = 0
colnames(all_spp_m_ggplot) = c("fraction","species","samples","locations","locations_f")
all_spp_m_ggplot[,5] = factor(all_spp_m_ggplot$locations, levels=c('St1','St2','PRM'))
#these are percentage values
all_spp_m_ggplot[,1] = all_spp_m_ggplot[,1]/100
#plot
x = colorRampPalette(brewer.pal(12,"Paired"))
p1=ggplot() + labs(title = "Lake Champlain - all annotated species",fill = "Taxonomy") +
theme_bw() +
theme(plot.title = element_text(hjust = 0.5, size=14, face="bold")) + scale_fill_manual(values = x(nrow(refseq.all.top1))) +
geom_bar(aes(y = fraction, x = samples, fill = species),
data = all_spp_m_ggplot,stat="identity") + ylab("fraction of annotated species")  + theme(axis.text.x = element_text(angle = 90, hjust = 1))
#all three (dimensions in inches)
dev.new(width=10, height=7,noRStudioGD = TRUE)
#pdf('figures/Champlain_barplot.pdf',width=14, height=15)
p1 + facet_grid(rows=vars(locations_f))
dev.print(device=pdf,paste("figures/Champlain_functions_barplot_level",level,".pdf",sep =""), onefile=FALSE)
dev.off()
